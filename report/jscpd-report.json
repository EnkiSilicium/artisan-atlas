{
  "statistics": {
    "detectionDate": "2025-09-02T04:32:11.297Z",
    "formats": {
      "typescript": {
        "sources": {
          "libs/shared-kernel/src/lib/domain/validators/is-date-or-iso-string.validator.ts": {
            "lines": 18,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/shared-kernel/src/lib/domain/services/enum-from-obj.service.ts": {
            "lines": 20,
            "tokens": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/shared-kernel/src/lib/domain/assertions/assert-valid-class-validator.assertion.ts": {
            "lines": 43,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/remapper/typeorm-postgres/src/lib/infra-error-typeorm.remapper.ts": {
            "lines": 158,
            "tokens": 1547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/workshop/src/lib/domain-error.registry.ts": {
            "lines": 68,
            "tokens": 518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/order/src/lib/domain-error.registry.ts": {
            "lines": 54,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/common/src/lib/programmer-error.registry.ts": {
            "lines": 22,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/common/src/lib/infra-error.registry.ts": {
            "lines": 133,
            "tokens": 890,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/commissioner/src/lib/domain-error.registry.ts": {
            "lines": 60,
            "tokens": 459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/bonus/src/lib/domain-error.registry.ts": {
            "lines": 67,
            "tokens": 504,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/lib/interfaces/error-registry.interface.ts": {
            "lines": 8,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/lib/interfaces/base-descriptor.interface.ts": {
            "lines": 7,
            "tokens": 76,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/lib/factories/error-registry.factory.ts": {
            "lines": 48,
            "tokens": 550,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/lib/error-classes/programmer-error.class.ts": {
            "lines": 16,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/lib/error-classes/infra-error.class.ts": {
            "lines": 16,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/lib/error-classes/domain-error.class.ts": {
            "lines": 16,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/lib/error-classes/base-error.class.ts": {
            "lines": 39,
            "tokens": 422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/write-commands/update-optimistic.write-command.ts": {
            "lines": 153,
            "tokens": 1472,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/unit-of-work/typeorm.uow.ts": {
            "lines": 132,
            "tokens": 1291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/unit-of-work/typeorm.uow.spec.ts": {
            "lines": 196,
            "tokens": 2194,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 72,
            "duplicatedTokens": 681,
            "percentage": 36.73,
            "percentageTokens": 31.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/transformers/numeric-string-transformer.ts": {
            "lines": 6,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/transformers/iso-date-transformer.ts": {
            "lines": 5,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/outbox/outbox-message.entity.ts": {
            "lines": 19,
            "tokens": 197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/interfaces/transaction-context.type.ts": {
            "lines": 20,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/interfaces/entity-techncials.interface.ts": {
            "lines": 7,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/helpers/transaction.helper.ts": {
            "lines": 131,
            "tokens": 945,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/helpers/set-new-time-and-version.helper.ts": {
            "lines": 20,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/helpers/rollback-test.wrapper.ts": {
            "lines": 31,
            "tokens": 276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/config/kafka-config.factory.ts": {
            "lines": 127,
            "tokens": 1203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/lib/assertions/assert-implements-entity-technicals.assertion.ts": {
            "lines": 12,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/observability/src/lib/interceptors/logging.interceptor.ts": {
            "lines": 140,
            "tokens": 1533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/observability/src/lib/formatters/secret-masking.formatter.ts": {
            "lines": 54,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/observability/src/lib/formatters/otel-trace-log.formatter.ts": {
            "lines": 21,
            "tokens": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/observability/src/lib/config/winston-config.factory.ts": {
            "lines": 62,
            "tokens": 725,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/observability/src/lib/config/otel-config.factory.ts": {
            "lines": 26,
            "tokens": 217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/interceptor/src/lib/kafka-error.interceptor.ts": {
            "lines": 246,
            "tokens": 2228,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/interceptor/src/lib/http-error.interceptor.ts": {
            "lines": 104,
            "tokens": 1091,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/_union.types.ts": {
            "lines": 24,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/stage-confirmed.event.ts": {
            "lines": 29,
            "tokens": 214,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 134,
            "percentage": 72.41,
            "percentageTokens": 62.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/stage-confirmation-marked.event.ts": {
            "lines": 29,
            "tokens": 214,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 134,
            "percentage": 72.41,
            "percentageTokens": 62.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/request-edeited.event.ts": {
            "lines": 23,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/order-placed.event.ts": {
            "lines": 31,
            "tokens": 249,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 91,
            "percentage": 38.71,
            "percentageTokens": 36.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/order-completed.event.ts": {
            "lines": 24,
            "tokens": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/offer-accepted.event.ts": {
            "lines": 26,
            "tokens": 191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/invitation-declined.event.ts": {
            "lines": 26,
            "tokens": 191,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 101,
            "percentage": 61.54,
            "percentageTokens": 52.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/invitation-accepted.event.ts": {
            "lines": 26,
            "tokens": 191,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 101,
            "percentage": 61.54,
            "percentageTokens": 52.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/index.ts": {
            "lines": 11,
            "tokens": 117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/cancelled.event.ts": {
            "lines": 20,
            "tokens": 158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/all-stages-completed.event.ts": {
            "lines": 25,
            "tokens": 189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/all-responses-received.event.ts": {
            "lines": 21,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/events/all-invitations-declined.event.ts": {
            "lines": 27,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/dtos/workshop-invitation-decline.dto.ts": {
            "lines": 39,
            "tokens": 259,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 112,
            "percentage": 41.03,
            "percentageTokens": 43.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/dtos/workshop-invitation-accept.dto.ts": {
            "lines": 73,
            "tokens": 508,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 215,
            "percentage": 39.73,
            "percentageTokens": 42.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/dtos/stage-completion-mark.dto.ts": {
            "lines": 38,
            "tokens": 272,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 152,
            "percentage": 57.89,
            "percentageTokens": 55.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/dtos/stage-completion-confirm.dto.ts": {
            "lines": 38,
            "tokens": 272,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 152,
            "percentage": 57.89,
            "percentageTokens": 55.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/dtos/order-init.dto.ts": {
            "lines": 69,
            "tokens": 493,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 103,
            "percentage": 18.84,
            "percentageTokens": 20.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/dtos/order-history-result.dto.ts": {
            "lines": 174,
            "tokens": 1301,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/order-service/dtos/order-history-query.dto.ts": {
            "lines": 121,
            "tokens": 905,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 187,
            "percentage": 18.18,
            "percentageTokens": 20.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/commissioner/events/order-init-requested.event.ts": {
            "lines": 34,
            "tokens": 256,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 91,
            "percentage": 35.29,
            "percentageTokens": 35.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/commissioner/events/cancel-submitted.event.ts": {
            "lines": 15,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/bonus-service/events/_union.types.ts": {
            "lines": 21,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/bonus-service/events/vip-lost.event.ts": {
            "lines": 17,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/bonus-service/events/vip-accquired.event.ts": {
            "lines": 17,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/bonus-service/events/grade-attained.event.ts": {
            "lines": 22,
            "tokens": 166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/bonus-service/dtos/bonus-read-result.dto.ts": {
            "lines": 67,
            "tokens": 645,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/bonus-service/dtos/bonus-read-query.dto.ts": {
            "lines": 153,
            "tokens": 1274,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 187,
            "percentage": 14.38,
            "percentageTokens": 14.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/shared-kernel/src/lib/index.ts": {
            "lines": 7,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/remapper/typeorm-postgres/jest.config.ts": {
            "lines": 30,
            "tokens": 203,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 294,
            "duplicatedTokens": 1834,
            "percentage": 980,
            "percentageTokens": 903.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/workshop/jest.config.ts": {
            "lines": 30,
            "tokens": 203,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 70,
            "percentageTokens": 64.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/workshop/jest.config.d.ts": {
            "lines": 10,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/order/jest.config.ts": {
            "lines": 30,
            "tokens": 203,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 70,
            "percentageTokens": 64.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/order/jest.config.d.ts": {
            "lines": 10,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/common/jest.config.ts": {
            "lines": 30,
            "tokens": 203,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 70,
            "percentageTokens": 64.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/commissioner/jest.config.ts": {
            "lines": 30,
            "tokens": 203,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 70,
            "percentageTokens": 64.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/commissioner/jest.config.d.ts": {
            "lines": 10,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/bonus/jest.config.ts": {
            "lines": 30,
            "tokens": 203,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 70,
            "percentageTokens": 64.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/registries/bonus/jest.config.d.ts": {
            "lines": 10,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/src/index.ts": {
            "lines": 7,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/_common/kafka-topics.enum.ts": {
            "lines": 12,
            "tokens": 100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/auth.spec.ts": {
            "lines": 6,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/shared-kernel/src/index.ts": {
            "lines": 7,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/src/index.ts": {
            "lines": 12,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/observability/src/index.ts": {
            "lines": 4,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/interceptor/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/interceptor/jest.config.d.ts": {
            "lines": 10,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/error-core/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/src/index.ts": {
            "lines": 30,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/shared-kernel/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/persistence/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/observability/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/error-handling/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/contracts/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/adapter/jest.config.ts": {
            "lines": 29,
            "tokens": 201,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 131,
            "percentage": 72.41,
            "percentageTokens": 65.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/persistence/repositories/vip-profile/vip-profile.repo.ts": {
            "lines": 81,
            "tokens": 850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/persistence/repositories/vip-profile/vip-profile.repo.spec.ts": {
            "lines": 276,
            "tokens": 2704,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 182,
            "duplicatedTokens": 1808,
            "percentage": 65.94,
            "percentageTokens": 66.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/persistence/repositories/bonus-event/bonus-event.repo.ts": {
            "lines": 68,
            "tokens": 462,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/persistence/repositories/bonus-event/bonus-event.repo.spec.ts": {
            "lines": 124,
            "tokens": 1231,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 246,
            "percentage": 20.97,
            "percentageTokens": 19.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/persistence/repositories/additive-bonus/additive-bonus.repo.ts": {
            "lines": 60,
            "tokens": 531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/persistence/repositories/additive-bonus/additive-bonus.repo.spec.ts": {
            "lines": 150,
            "tokens": 1477,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 50,
            "duplicatedTokens": 521,
            "percentage": 33.33,
            "percentageTokens": 35.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/workshop-invitation/workshop-invitation.repo.ts": {
            "lines": 80,
            "tokens": 763,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/workshop-invitation/workshop-invitation.repo.spec.ts": {
            "lines": 234,
            "tokens": 2632,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 268,
            "duplicatedTokens": 2880,
            "percentage": 114.53,
            "percentageTokens": 109.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/stage/stage.repo.ts": {
            "lines": 162,
            "tokens": 1403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/stage/stage.repo.spec.ts": {
            "lines": 378,
            "tokens": 3931,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 282,
            "duplicatedTokens": 3107,
            "percentage": 74.6,
            "percentageTokens": 79.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/request/request.repo.ts": {
            "lines": 56,
            "tokens": 520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/request/request.repo.spec.ts": {
            "lines": 178,
            "tokens": 1887,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 55,
            "duplicatedTokens": 549,
            "percentage": 30.9,
            "percentageTokens": 29.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/request/request.mock-factory.ts": {
            "lines": 18,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/order/order.repo.ts": {
            "lines": 57,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/persistence/repositories/order/order.repo.spec.ts": {
            "lines": 156,
            "tokens": 1739,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 69,
            "duplicatedTokens": 816,
            "percentage": 44.23,
            "percentageTokens": 46.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/infra/persistence/repositories/bonus-read.repository.ts": {
            "lines": 97,
            "tokens": 926,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 110,
            "percentage": 12.37,
            "percentageTokens": 11.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/infra/persistence/projections/bonus-read.projection.ts": {
            "lines": 53,
            "tokens": 329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/adapters/inbound/http/bonus-read.controller.ts": {
            "lines": 64,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/vip-profile/window-algo.registry.ts": {
            "lines": 19,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/vip-profile/vip-profile.registry.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/vip-profile/vip-profile.entity.ts": {
            "lines": 499,
            "tokens": 4040,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 81,
            "duplicatedTokens": 535,
            "percentage": 16.23,
            "percentageTokens": 13.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/vip-profile/vip-profile.entity.spec.ts": {
            "lines": 786,
            "tokens": 7354,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 204,
            "duplicatedTokens": 1858,
            "percentage": 25.95,
            "percentageTokens": 25.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/vip-profile/vip-profile.entity.mock-factory.ts": {
            "lines": 38,
            "tokens": 539,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/vip-profile/last-month-event-set.entity.ts": {
            "lines": 114,
            "tokens": 872,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 140,
            "percentage": 18.42,
            "percentageTokens": 16.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/common/bonus-event.registy.ts": {
            "lines": 32,
            "tokens": 245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/common/bonus-event.entity.ts": {
            "lines": 108,
            "tokens": 869,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 141,
            "percentage": 19.44,
            "percentageTokens": 16.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/common/bonus-event.entity.mock-factory.ts": {
            "lines": 18,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/additive-bonus/grade.policy.ts": {
            "lines": 76,
            "tokens": 659,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/additive-bonus/grade.policy.spec.ts": {
            "lines": 35,
            "tokens": 322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/additive-bonus/additive-bonus.entity.ts": {
            "lines": 238,
            "tokens": 1886,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 145,
            "percentage": 8.82,
            "percentageTokens": 7.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/additive-bonus/additive-bonus.entity.spec.ts": {
            "lines": 325,
            "tokens": 3050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/domain/aggregates/additive-bonus/additive-bonus.entity.mock-factory.ts": {
            "lines": 19,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/application/services/bonus-event/bonus-event.service.ts": {
            "lines": 123,
            "tokens": 1077,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/application/services/bonus-event/bonus-event.command.ts": {
            "lines": 9,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/adapters/outbound/messaging/kafka.topic-map.ts": {
            "lines": 7,
            "tokens": 76,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/adapters/outbound/messaging/kafka-producer.ts": {
            "lines": 82,
            "tokens": 819,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/adapters/inbound/messaging/kafka.consumer.ts": {
            "lines": 75,
            "tokens": 709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/adapters/inbound/http/mock-controller.ts": {
            "lines": 24,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/infra/persistence/repositories/order-history.repository.ts": {
            "lines": 102,
            "tokens": 979,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 110,
            "percentage": 11.76,
            "percentageTokens": 11.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/infra/persistence/projections/order-histrory.projection.ts": {
            "lines": 81,
            "tokens": 507,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/workshop-invitation/workshop-invitation.enum.ts": {
            "lines": 4,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/workshop-invitation/workshop-invitation.entity.ts": {
            "lines": 249,
            "tokens": 2047,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 25,
            "duplicatedTokens": 168,
            "percentage": 10.04,
            "percentageTokens": 8.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/workshop-invitation/workshop-invitation.entity.spec.ts": {
            "lines": 273,
            "tokens": 2647,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/workshop-invitation/workshop-invitation.entity.mock-factory.ts": {
            "lines": 21,
            "tokens": 277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/stage/stage.entity.ts": {
            "lines": 332,
            "tokens": 2775,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 51,
            "duplicatedTokens": 404,
            "percentage": 15.36,
            "percentageTokens": 14.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/stage/stage.entity.spec.ts": {
            "lines": 287,
            "tokens": 3447,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 160,
            "duplicatedTokens": 2030,
            "percentage": 55.75,
            "percentageTokens": 58.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/stage/stage.entity.mock-factory.ts": {
            "lines": 22,
            "tokens": 255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/stage/stage-status.enum.ts": {
            "lines": 4,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/stage/stage-defaults.factory.ts": {
            "lines": 23,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/request/request.entity.ts": {
            "lines": 154,
            "tokens": 1198,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 261,
            "percentage": 25.97,
            "percentageTokens": 21.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/order/order.type.ts": {
            "lines": 100,
            "tokens": 877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/order/order.transitions.ts": {
            "lines": 27,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/order/order.state.ts": {
            "lines": 69,
            "tokens": 679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/order/order.enum.ts": {
            "lines": 13,
            "tokens": 95,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/order/order.entity.ts": {
            "lines": 209,
            "tokens": 1743,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 376,
            "percentage": 21.05,
            "percentageTokens": 21.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/order/order.entity.spec.ts": {
            "lines": 212,
            "tokens": 2500,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 30,
            "duplicatedTokens": 336,
            "percentage": 14.15,
            "percentageTokens": 13.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/order/order.entity.mock-factory.ts": {
            "lines": 18,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/domain/entities/common/assert-is-found.assertion.ts": {
            "lines": 24,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/workshop/workshop-invitation-response.service.ts": {
            "lines": 119,
            "tokens": 1111,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 60,
            "duplicatedTokens": 530,
            "percentage": 50.42,
            "percentageTokens": 47.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/workshop/workshop-invitation-response.command.ts": {
            "lines": 16,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/workshop/workshop-invitation-edit.service.ts": {
            "lines": 113,
            "tokens": 856,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 428,
            "percentage": 38.94,
            "percentageTokens": 50,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/workshop/workshop-invitation-edit.command.ts": {
            "lines": 12,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/stage/stage-completion.service.ts": {
            "lines": 174,
            "tokens": 1513,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 476,
            "percentage": 31.03,
            "percentageTokens": 31.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/request/request-edit.service.ts": {
            "lines": 82,
            "tokens": 642,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 28,
            "duplicatedTokens": 332,
            "percentage": 34.15,
            "percentageTokens": 51.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/request/request-edit.command.ts": {
            "lines": 13,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/order/order-init.service.ts": {
            "lines": 86,
            "tokens": 856,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/services/order/order-init.command.ts": {
            "lines": 11,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/outbound/messaging/kafka.topic-map.ts": {
            "lines": 17,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/outbound/messaging/kafka-producer.ts": {
            "lines": 71,
            "tokens": 695,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/outbound/http-clients/workshop.adapter.ts": {
            "lines": 8,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/inbound/messaging/workshop-invitation-tracker.kafka.ts": {
            "lines": 22,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/inbound/http/workshop-invitation-response.controller.ts": {
            "lines": 67,
            "tokens": 509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/inbound/http/stage-completion.controller.ts": {
            "lines": 66,
            "tokens": 535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/inbound/http/order-init.controller.ts": {
            "lines": 39,
            "tokens": 325,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/infra/di/bonus-read.module.ts": {
            "lines": 68,
            "tokens": 462,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/infra/config/winston.config.ts": {
            "lines": 6,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/infra/config/typeorm-config.ts": {
            "lines": 43,
            "tokens": 565,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 78,
            "duplicatedTokens": 1041,
            "percentage": 181.4,
            "percentageTokens": 184.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/infra/config/otel.config.ts": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/infra/config/kafka.config.ts": {
            "lines": 6,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/application/bonus-read/bonus-read.query.ts": {
            "lines": 23,
            "tokens": 172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/application/bonus-read/bonus-read.query-handler.ts": {
            "lines": 24,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/application/bonus-read/bonus-read.mapper.ts": {
            "lines": 33,
            "tokens": 289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/di/bonus-processor.module.ts": {
            "lines": 81,
            "tokens": 671,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 132,
            "percentage": 33.33,
            "percentageTokens": 19.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/config/winston.config.ts": {
            "lines": 6,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/config/typeorm-config.ts": {
            "lines": 46,
            "tokens": 615,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 630,
            "percentage": 100,
            "percentageTokens": 102.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/config/otel.config.ts": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/config/migration-dtsrc.config.ts": {
            "lines": 7,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/bonus-processor/infra/config/kafka.config.ts": {
            "lines": 6,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/infra/di/order-read.module.ts": {
            "lines": 57,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/infra/config/winston.config.ts": {
            "lines": 5,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/infra/config/typeorm-config.ts": {
            "lines": 42,
            "tokens": 547,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 426,
            "percentage": 76.19,
            "percentageTokens": 77.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/infra/config/otel.config.ts": {
            "lines": 6,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/infra/config/kafka.config.ts": {
            "lines": 8,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/application/query-handlers/history.query-handler.ts": {
            "lines": 26,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/application/query-handlers/history-mapper.ts": {
            "lines": 50,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/read-model/adapters/http/order-history.controller.ts": {
            "lines": 62,
            "tokens": 500,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/workshop-invitation-tracker/workshop-invitation-tracker.service.ts": {
            "lines": 81,
            "tokens": 755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/workshop-invitation-tracker/invitation-response-tracker.entity.ts": {
            "lines": 18,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/di/order-workflow.module.ts": {
            "lines": 114,
            "tokens": 946,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 132,
            "percentage": 23.68,
            "percentageTokens": 13.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/config/winston.config.ts": {
            "lines": 5,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/config/typeorm-config.ts": {
            "lines": 45,
            "tokens": 623,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 397,
            "percentage": 62.22,
            "percentageTokens": 63.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/config/otel.config.ts": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/infra/config/kafka.config.ts": {
            "lines": 11,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/application/ports/initialize-tracker.port.ts": {
            "lines": 6,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/src/app/order-workflow/adapters/outbound/workshop-invitation-tracker.adapter.ts": {
            "lines": 15,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/modules/status/status.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/modules/registrator/registrator.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/modules/profile/profile.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/modules/capability-tags/capability-tags.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/modules/auth/auth.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/src/app/modules/read-projection/read-projection.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/src/app/modules/ingestion/ingestion.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/src/app/modules/workshop-reports/workshop-reports.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/src/app/modules/order-reports/order-reports.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/modules/registrator/registrator.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/modules/general-info/general-info.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/modules/auth/auth.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/src/app/modules/read-projection/read-projection.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service/src/app/modules/admin-management/admin-management.module.ts": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service-e2e/src/workshop-service/workshop-service.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 63,
            "duplicatedTokens": 679,
            "percentage": 700,
            "percentageTokens": 700,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 56,
            "duplicatedTokens": 623,
            "percentage": 700,
            "percentageTokens": 700,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 63,
            "duplicatedTokens": 672,
            "percentage": 700,
            "percentageTokens": 700,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 105,
            "duplicatedTokens": 1029,
            "percentage": 700,
            "percentageTokens": 700,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 133,
            "duplicatedTokens": 1246,
            "percentage": 700,
            "percentageTokens": 700,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/app.module.ts": {
            "lines": 20,
            "tokens": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 77,
            "duplicatedTokens": 616,
            "percentage": 700,
            "percentageTokens": 700,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 140,
            "duplicatedTokens": 1414,
            "percentage": 700,
            "percentageTokens": 700,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff-e2e/src/workshop-mobile-bff/workshop-mobile-bff.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 97,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 147,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 178,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff/src/app/app.module.ts": {
            "lines": 9,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 88,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff-e2e/src/web-bff/web-bff.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 97,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 147,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 178,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff/src/app/app.module.ts": {
            "lines": 9,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 88,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 147,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service-e2e/src/review-service/review-service.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 97,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 178,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/src/app/app.module.ts": {
            "lines": 11,
            "tokens": 111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 88,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 147,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service-e2e/src/report-service/report-service.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 97,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 178,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/src/app/app.module.ts": {
            "lines": 11,
            "tokens": 111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 88,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service-e2e/src/support/test-setup.ts": {
            "lines": 7,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service-e2e/src/support/global-teardown.ts": {
            "lines": 10,
            "tokens": 140,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 140,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service-e2e/src/support/global-setup.ts": {
            "lines": 89,
            "tokens": 880,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 765,
            "percentage": 88.76,
            "percentageTokens": 86.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service-e2e/src/order-service/order-workflow.spec.ts": {
            "lines": 354,
            "tokens": 5524,
            "sources": 1,
            "clones": 22,
            "duplicatedLines": 209,
            "duplicatedTokens": 3090,
            "percentage": 59.04,
            "percentageTokens": 55.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 147,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service-e2e/src/commissioner-service/commissioner-service.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 97,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 178,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/app.module.ts": {
            "lines": 12,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 88,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service-e2e/src/support/test-setup.ts": {
            "lines": 7,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service-e2e/src/support/global-teardown.ts": {
            "lines": 10,
            "tokens": 140,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 140,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service-e2e/src/support/global-setup.ts": {
            "lines": 89,
            "tokens": 880,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 765,
            "percentage": 88.76,
            "percentageTokens": 86.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service-e2e/src/bonus-service/bonus-processor.spec.ts": {
            "lines": 175,
            "tokens": 1875,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 15,
            "duplicatedTokens": 212,
            "percentage": 8.57,
            "percentageTokens": 11.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 147,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service-e2e/src/admin-service/admin-service.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 97,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 178,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service/src/app/app.module.ts": {
            "lines": 10,
            "tokens": 95,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 88,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff-e2e/src/support/test-setup.ts": {
            "lines": 8,
            "tokens": 89,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff-e2e/src/support/global-teardown.ts": {
            "lines": 9,
            "tokens": 96,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 96,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff-e2e/src/support/global-setup.ts": {
            "lines": 15,
            "tokens": 147,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 147,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff-e2e/src/admin-bff/admin-bff.spec.ts": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 97,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff/src/app/app.service.ts": {
            "lines": 7,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff/src/app/app.service.spec.ts": {
            "lines": 19,
            "tokens": 178,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 178,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff/src/app/app.module.ts": {
            "lines": 9,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff/src/app/app.controller.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 88,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff/src/app/app.controller.spec.ts": {
            "lines": 20,
            "tokens": 202,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 104,
            "duplicatedTokens": 755,
            "percentage": 611.76,
            "percentageTokens": 589.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-service/jest.config.ts": {
            "lines": 9,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 111,
            "percentage": 88.24,
            "percentageTokens": 86.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/workshop-mobile-bff/jest.config.ts": {
            "lines": 9,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 111,
            "percentage": 88.24,
            "percentageTokens": 86.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/web-bff/jest.config.ts": {
            "lines": 9,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 111,
            "percentage": 88.24,
            "percentageTokens": 86.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/review-service/jest.config.ts": {
            "lines": 9,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 111,
            "percentage": 88.24,
            "percentageTokens": 86.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/report-service/jest.config.ts": {
            "lines": 9,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 111,
            "percentage": 88.24,
            "percentageTokens": 86.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/jest.setup.ts": {
            "lines": 7,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/order-service/jest.config.ts": {
            "lines": 13,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 128,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 111,
            "percentage": 88.24,
            "percentageTokens": 86.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/commissioner-service/jest.config.ts": {
            "lines": 9,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 111,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 281,
            "percentage": 258.82,
            "percentageTokens": 253.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/jest.setup.ts": {
            "lines": 7,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/bonus-service/jest.config.ts": {
            "lines": 13,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 111,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 96,
            "percentage": 88.24,
            "percentageTokens": 86.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-service/jest.config.ts": {
            "lines": 9,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff-e2e/jest.config.ts": {
            "lines": 17,
            "tokens": 111,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 96,
            "percentage": 88.24,
            "percentageTokens": 86.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "apps/admin-bff/jest.config.ts": {
            "lines": 9,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 15049,
          "tokens": 140062,
          "sources": 315,
          "clones": 167,
          "duplicatedLines": 2463,
          "duplicatedTokens": 23369,
          "percentage": 16.37,
          "percentageTokens": 16.68,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 15049,
      "tokens": 140062,
      "sources": 315,
      "clones": 167,
      "duplicatedLines": 2463,
      "duplicatedTokens": 23369,
      "percentage": 16.37,
      "percentageTokens": 16.68,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "@IsString()\r\n  @IsNotEmpty()\r\n  orderID!: string;\r\n\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  workshopID!: string;\r\n\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  commissionerId!: string;\r\n\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  stageName!: string;\r\n\r\n  @Equals(1)\r\n  schemaV!: 1;\r\n\r\n  @IsISO8601()\r\n  confirmedAt!: string;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\src\\order-service\\events\\stage-confirmation-marked.event.ts",
        "start": 9,
        "end": 30,
        "startLoc": {
          "line": 9,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 30,
          "column": 2,
          "position": 214
        }
      },
      "secondFile": {
        "name": "libs\\contracts\\src\\order-service\\events\\stage-confirmed.event.ts",
        "start": 9,
        "end": 30,
        "startLoc": {
          "line": 9,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 30,
          "column": 2,
          "position": 214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "@IsString()\r\n  @IsNotEmpty()\r\n  commissionerId!: string;\r\n\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  orderID!: string;\r\n\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  workshopID!: string;\r\n\r\n  @Equals(1)\r\n  schemaV!: 1;\r\n\r\n  @IsISO8601()\r\n  acceptedAt",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\src\\order-service\\events\\invitation-accepted.event.ts",
        "start": 10,
        "end": 26,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 82
        },
        "endLoc": {
          "line": 26,
          "column": 11,
          "position": 183
        }
      },
      "secondFile": {
        "name": "libs\\contracts\\src\\order-service\\events\\invitation-declined.event.ts",
        "start": 10,
        "end": 26,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 82
        },
        "endLoc": {
          "line": 26,
          "column": 11,
          "position": 183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\r\n  })\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  orderId!: string;\r\n\r\n  @ApiProperty({\r\n    type: String,\r\n    isArray: true,\r\n    description: 'IDs of the selected workshops',\r\n  })\r\n  @IsArray()\r\n  @ArrayNotEmpty()\r\n  @IsString({ each: true })\r\n  selectedWorkshops!: string[];\r\n\r\n  @",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\src\\order-service\\dtos\\workshop-invitation-accept.dto.ts",
        "start": 51,
        "end": 67,
        "startLoc": {
          "line": 51,
          "column": 18,
          "position": 335
        },
        "endLoc": {
          "line": 67,
          "column": 2,
          "position": 447
        }
      },
      "secondFile": {
        "name": "libs\\contracts\\src\\order-service\\dtos\\workshop-invitation-decline.dto.ts",
        "start": 25,
        "end": 40,
        "startLoc": {
          "line": 25,
          "column": 27,
          "position": 150
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "{\r\n  @ApiProperty({\r\n    type: String,\r\n    format: 'uuid',\r\n    description: 'ID of the workshop concerned',\r\n  })\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  workshopId!: string;\r\n\r\n  @ApiProperty({\r\n    type: String,\r\n    format: 'uuid',\r\n    description: 'ID of the commissioner',\r\n  })\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  commissionerId!: string;\r\n\r\n  @ApiProperty({\r\n    type: String,\r\n    format: 'uuid',\r\n    description: 'ID of the order for which the stage was completed'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\src\\order-service\\dtos\\stage-completion-confirm.dto.ts",
        "start": 7,
        "end": 29,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 42
        },
        "endLoc": {
          "line": 29,
          "column": 52,
          "position": 194
        }
      },
      "secondFile": {
        "name": "libs\\contracts\\src\\order-service\\dtos\\stage-completion-mark.dto.ts",
        "start": 7,
        "end": 29,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 42
        },
        "endLoc": {
          "line": 29,
          "column": 54,
          "position": 194
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "!: string;\r\n\r\n  @ApiProperty({\r\n    type: String,\r\n    isArray: true,\r\n    description: 'IDs of the selected workshops',\r\n  })\r\n  @IsArray()\r\n  @ArrayNotEmpty()\r\n  @IsString({ each: true })\r\n  selectedWorkshops!: string[];\r\n\r\n  @ApiProperty({\r\n    type: () => RequestOrderInitPayload",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\src\\order-service\\dtos\\order-init.dto.ts",
        "start": 51,
        "end": 64,
        "startLoc": {
          "line": 51,
          "column": 15,
          "position": 344
        },
        "endLoc": {
          "line": 64,
          "column": 24,
          "position": 447
        }
      },
      "secondFile": {
        "name": "libs\\contracts\\src\\order-service\\dtos\\workshop-invitation-accept.dto.ts",
        "start": 55,
        "end": 68,
        "startLoc": {
          "line": 55,
          "column": 8,
          "position": 359
        },
        "endLoc": {
          "line": 68,
          "column": 32,
          "position": 462
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "@IsString()\r\n  @IsNotEmpty()\r\n  commissionerId!: string;\r\n\r\n  @IsArray()\r\n  @ArrayNotEmpty()\r\n  @IsString({ each: true })\r\n  selectedWorkshops!: string[];\r\n\r\n  @ValidateNested()\r\n  request!: OrderInitRequestPayload;\r\n\r\n  @Equals(1) // read: schemaV must equal the number 1, exactly",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\src\\commissioner\\events\\order-init-requested.event.ts",
        "start": 21,
        "end": 33,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 153
        },
        "endLoc": {
          "line": 33,
          "column": 50,
          "position": 244
        }
      },
      "secondFile": {
        "name": "libs\\contracts\\src\\order-service\\events\\order-placed.event.ts",
        "start": 15,
        "end": 28,
        "startLoc": {
          "line": 15,
          "column": 3,
          "position": 130
        },
        "endLoc": {
          "line": 28,
          "column": 8,
          "position": 223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\r\n  })\r\n  @IsOptional()\r\n  @Transform(({ value }) => Number(value))\r\n  @IsInt()\r\n  @Min(1)\r\n  @Max(500)\r\n  limit?: number = 50;\r\n\r\n  @ApiPropertyOptional({\r\n    type: Number,\r\n    minimum: 0,\r\n    description: 'Offset into the result set (default 0)',\r\n  })\r\n  @IsOptional()\r\n  @Transform(({ value }) => Number(value))\r\n  @IsInt()\r\n  @Min(0)\r\n  offset?: number = 0;\r\n\r\n  @ApiPropertyOptional({\r\n    enum: SORT_FIELDS,\r\n    description: 'Field on which to sort (default vipLastUpdatedAt)'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\src\\bonus-service\\dtos\\bonus-read-query.dto.ts",
        "start": 117,
        "end": 139,
        "startLoc": {
          "line": 117,
          "column": 40,
          "position": 946
        },
        "endLoc": {
          "line": 139,
          "column": 52,
          "position": 1133
        }
      },
      "secondFile": {
        "name": "libs\\contracts\\src\\order-service\\dtos\\order-history-query.dto.ts",
        "start": 85,
        "end": 107,
        "startLoc": {
          "line": 85,
          "column": 40,
          "position": 577
        },
        "endLoc": {
          "line": 107,
          "column": 25,
          "position": 764
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'workshop'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\registries\\workshop\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 11,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'order'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\registries\\order\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 8,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'common'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\registries\\common\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 9,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'commissioner'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\registries\\commissioner\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 15,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'bonus'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\registries\\bonus\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 8,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'interceptor'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\interceptor\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 14,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'error-core'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\error-core\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 13,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'shared-kernel'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\shared-kernel\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 16,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'persistence'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\persistence\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 14,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'observability'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\observability\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 16,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'error-handling'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\error-handling\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 17,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'contracts'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\contracts\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 12,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'auth'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\auth\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 7,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "/* eslint-disable */\r\nimport { readFileSync } from 'fs';\r\n\r\n// Reading the SWC compilation config and remove the \"exclude\"\r\n// for the test files to be compiled by SWC\r\nconst { exclude: _, ...swcJestConfig } = JSON.parse(\r\n  readFileSync(`${__dirname}/.swcrc`, 'utf-8'),\r\n);\r\n\r\n// disable .swcrc look-up by SWC core because we're passing in swcJestConfig ourselves.\r\n// If we do not disable this, SWC Core will read .swcrc and won't transform our test files due to \"exclude\"\r\nif (swcJestConfig.swcrc === undefined) {\r\n  swcJestConfig.swcrc = false;\r\n}\r\n\r\n// Uncomment if using global setup/teardown files being transformed via swc\r\n// https://nx.dev/nx-api/jest/documents/overview#global-setupteardown-with-nx-libraries\r\n// jest needs EsModule Interop to find the default exported setup/teardown functions\r\n// swcJestConfig.module.noInterop = false;\r\n\r\nexport default {\r\n  displayName: 'adapter'",
      "tokens": 0,
      "firstFile": {
        "name": "libs\\adapter\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 10,
          "position": 131
        }
      },
      "secondFile": {
        "name": "libs\\error-handling\\remapper\\typeorm-postgres\\jest.config.ts",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 22,
          "column": 19,
          "position": 131
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\r\n\r\n  beforeAll(async () => {\r\n    container = await new PostgreSqlContainer('postgres:16-alpine')\r\n      .withDatabase('testdb')\r\n      .withUsername('testuser')\r\n      .withPassword('testpw')\r\n      .start();\r\n\r\n    ds = new DataSource({\r\n      type: 'postgres',\r\n      host: container.getHost(),\r\n      port: container.getPort(),\r\n      username: container.getUsername(),\r\n      password: container.getPassword(),\r\n      database: container.getDatabase(),\r\n      entities: [VipProfile",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 93,
        "end": 109,
        "startLoc": {
          "line": 93,
          "column": 15,
          "position": 758
        },
        "endLoc": {
          "line": 109,
          "column": 11,
          "position": 910
        }
      },
      "secondFile": {
        "name": "libs\\persistence\\src\\lib\\unit-of-work\\typeorm.uow.spec.ts",
        "start": 37,
        "end": 53,
        "startLoc": {
          "line": 37,
          "column": 11,
          "position": 319
        },
        "endLoc": {
          "line": 53,
          "column": 14,
          "position": 471
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "});\r\n        const event2 = makeLMEvent({ commissionerId, bucket: 1 });\r\n        const vp = makeVipProfile({\r\n          commissionerId,\r\n          lastMonthEvents: [event1, event2],\r\n        });\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.insert(vp);\r\n        });\r\n        await seedBonusParentsAndBundles(ds, uow, commissionerId, [\r\n          event1,\r\n          event2,\r\n        ]);\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.update(vp);\r\n        });\r\n\r\n        vp",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 174,
        "end": 193,
        "startLoc": {
          "line": 174,
          "column": 2,
          "position": 1618
        },
        "endLoc": {
          "line": 193,
          "column": 3,
          "position": 1801
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 139,
        "end": 159,
        "startLoc": {
          "line": 139,
          "column": 2,
          "position": 1221
        },
        "endLoc": {
          "line": 159,
          "column": 6,
          "position": 1406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.update(vp);\r\n        });\r\n\r\n        const manager = requireTxManager(ds);\r\n        const rows = await manager.find(LastMonthEventSet, {\r\n          where: { commissionerId },\r\n        });\r\n        expect(rows)",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 193,
        "end": 203,
        "startLoc": {
          "line": 193,
          "column": 2,
          "position": 1810
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1911
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 153,
        "end": 164,
        "startLoc": {
          "line": 153,
          "column": 2,
          "position": 1359
        },
        "endLoc": {
          "line": 164,
          "column": 2,
          "position": 1462
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "});\r\n        const vp = makeVipProfile({\r\n          commissionerId,\r\n          lastMonthEvents: [event1, event2],\r\n        });\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.insert(vp);\r\n        });\r\n        await seedBonusParentsAndBundles(ds, uow, commissionerId, [\r\n          event1,\r\n          event2,\r\n        ]);\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.update(vp);\r\n          await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 212,
        "end": 228,
        "startLoc": {
          "line": 212,
          "column": 2,
          "position": 2044
        },
        "endLoc": {
          "line": 228,
          "column": 6,
          "position": 2195
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 140,
        "end": 157,
        "startLoc": {
          "line": 140,
          "column": 2,
          "position": 1245
        },
        "endLoc": {
          "line": 157,
          "column": 2,
          "position": 1398
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "await repo.update(vp);\r\n        });\r\n\r\n        const manager = requireTxManager(ds);\r\n        const rows = await manager.find(LastMonthEventSet, {\r\n          where: { commissionerId },\r\n        });\r\n        expect(rows.map((r) => r.eventId).sort()).toEqual(\r\n          [event1.eventId, event2.eventId].sort(),\r\n        );\r\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 228,
        "end": 238,
        "startLoc": {
          "line": 228,
          "column": 11,
          "position": 2195
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 2316
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 156,
        "end": 167,
        "startLoc": {
          "line": 156,
          "column": 11,
          "position": 1386
        },
        "endLoc": {
          "line": 167,
          "column": 7,
          "position": 1509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "});\r\n        const vp = makeVipProfile({\r\n          commissionerId,\r\n          lastMonthEvents: [event1, event2],\r\n        });\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.insert(vp);\r\n        });\r\n        await seedBonusParentsAndBundles(ds, uow, commissionerId, [\r\n          event1,\r\n          event2,\r\n        ]);\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.update(vp);\r\n        });\r\n\r\n        vp.lastMonthEvents = []",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 245,
        "end": 263,
        "startLoc": {
          "line": 245,
          "column": 2,
          "position": 2407
        },
        "endLoc": {
          "line": 263,
          "column": 2,
          "position": 2573
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 140,
        "end": 193,
        "startLoc": {
          "line": 140,
          "column": 2,
          "position": 1245
        },
        "endLoc": {
          "line": 193,
          "column": 7,
          "position": 1808
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "];\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.update(vp);\r\n        });\r\n\r\n        const manager = requireTxManager(ds);\r\n        const rows = await manager.find(LastMonthEventSet, {\r\n          where: { commissionerId },\r\n        });\r\n        expect(rows).toHaveLength(0",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 263,
        "end": 273,
        "startLoc": {
          "line": 263,
          "column": 2,
          "position": 2573
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2679
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\vip-profile\\vip-profile.repo.spec.ts",
        "start": 193,
        "end": 203,
        "startLoc": {
          "line": 193,
          "column": 7,
          "position": 1809
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1915
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\r\n\r\n  beforeAll(async () => {\r\n    container = await new PostgreSqlContainer('postgres:16-alpine')\r\n      .withDatabase('testdb')\r\n      .withUsername('testuser')\r\n      .withPassword('testpw')\r\n      .start();\r\n\r\n    ds = new DataSource({\r\n      type: 'postgres',\r\n      host: container.getHost(),\r\n      port: container.getPort(),\r\n      username: container.getUsername(),\r\n      password: container.getPassword(),\r\n      database: container.getDatabase(),\r\n      entities: [AdditiveBonus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\bonus-event\\bonus-event.repo.spec.ts",
        "start": 35,
        "end": 51,
        "startLoc": {
          "line": 35,
          "column": 15,
          "position": 318
        },
        "endLoc": {
          "line": 51,
          "column": 14,
          "position": 470
        }
      },
      "secondFile": {
        "name": "libs\\persistence\\src\\lib\\unit-of-work\\typeorm.uow.spec.ts",
        "start": 37,
        "end": 53,
        "startLoc": {
          "line": 37,
          "column": 11,
          "position": 319
        },
        "endLoc": {
          "line": 53,
          "column": 14,
          "position": 471
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ";\r\n\r\n  beforeAll(async () => {\r\n    container = await new PostgreSqlContainer('postgres:16-alpine')\r\n      .withDatabase('testdb')\r\n      .withUsername('testuser')\r\n      .withPassword('testpw')\r\n      .start();\r\n\r\n    ds = new DataSource({\r\n      type: 'postgres',\r\n      host: container.getHost(),\r\n      port: container.getPort(),\r\n      username: container.getUsername(),\r\n      password: container.getPassword(),\r\n      database: container.getDatabase(),\r\n      entities: [AdditiveBonus, BonusEventEntity, VipProfile, LastMonthEventSet],\r\n      synchronize: true,\r\n      entitySkipConstructor: true,\r\n    });\r\n    await ds.initialize();\r\n\r\n    const moduleRef = await Test.createTestingModule({\r\n      providers: [\r\n        AdditiveBonusRepo",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\additive-bonus\\additive-bonus.repo.spec.ts",
        "start": 39,
        "end": 63,
        "startLoc": {
          "line": 39,
          "column": 18,
          "position": 316
        },
        "endLoc": {
          "line": 63,
          "column": 18,
          "position": 541
        }
      },
      "secondFile": {
        "name": "libs\\persistence\\src\\lib\\unit-of-work\\typeorm.uow.spec.ts",
        "start": 37,
        "end": 59,
        "startLoc": {
          "line": 37,
          "column": 11,
          "position": 319
        },
        "endLoc": {
          "line": 59,
          "column": 15,
          "position": 543
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\r\n    uow = moduleRef.get(TypeOrmUoW);\r\n  });\r\n\r\n  afterAll(async () => {\r\n    if (ds.isInitialized) await ds.destroy();\r\n    await container.stop();\r\n  });\r\n\r\n  describe('insert', () => {\r\n    it('persists with v=1 and findByCommissionerId works'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\additive-bonus\\additive-bonus.repo.spec.ts",
        "start": 72,
        "end": 82,
        "startLoc": {
          "line": 72,
          "column": 18,
          "position": 636
        },
        "endLoc": {
          "line": 82,
          "column": 51,
          "position": 730
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\bonus-event\\bonus-event.repo.spec.ts",
        "start": 68,
        "end": 78,
        "startLoc": {
          "line": 68,
          "column": 15,
          "position": 630
        },
        "endLoc": {
          "line": 78,
          "column": 51,
          "position": 724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const ab = makeAdditiveBonus({ totalPoints: 5, version: 1 });\r\n\r\n        await uow.run({}, async () => {\r\n          await repo.insert(ab);\r\n        });\r\n\r\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\additive-bonus\\additive-bonus.repo.spec.ts",
        "start": 117,
        "end": 125,
        "startLoc": {
          "line": 117,
          "column": 58,
          "position": 1137
        },
        "endLoc": {
          "line": 125,
          "column": 6,
          "position": 1238
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\persistence\\repositories\\additive-bonus\\additive-bonus.repo.spec.ts",
        "start": 99,
        "end": 107,
        "startLoc": {
          "line": 99,
          "column": 16,
          "position": 931
        },
        "endLoc": {
          "line": 107,
          "column": 3,
          "position": 1032
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\r\n\r\n  beforeAll(async () => {\r\n    container = await new PostgreSqlContainer('postgres:16-alpine')\r\n      .withDatabase('testdb')\r\n      .withUsername('testuser')\r\n      .withPassword('testpw')\r\n      .start();\r\n\r\n    ds = new DataSource({\r\n      type: 'postgres',\r\n      host: container.getHost(),\r\n      port: container.getPort(),\r\n      username: container.getUsername(),\r\n      password: container.getPassword(),\r\n      database: container.getDatabase(),\r\n      entities: [Order",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 27,
          "position": 351
        },
        "endLoc": {
          "line": 47,
          "column": 6,
          "position": 503
        }
      },
      "secondFile": {
        "name": "libs\\persistence\\src\\lib\\unit-of-work\\typeorm.uow.spec.ts",
        "start": 37,
        "end": 53,
        "startLoc": {
          "line": 37,
          "column": 11,
          "position": 319
        },
        "endLoc": {
          "line": 53,
          "column": 14,
          "position": 471
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "= makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await repo.insert",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 124,
        "end": 133,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1389
        },
        "endLoc": {
          "line": 133,
          "column": 7,
          "position": 1482
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 93,
        "end": 102,
        "startLoc": {
          "line": 93,
          "column": 2,
          "position": 1010
        },
        "endLoc": {
          "line": 102,
          "column": 11,
          "position": 1103
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ commissionerId: randomUUID(), version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await repo.insert(inv);\r\n        });\r\n\r\n        inv.decline",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 155,
        "end": 171,
        "startLoc": {
          "line": 155,
          "column": 64,
          "position": 1712
        },
        "endLoc": {
          "line": 171,
          "column": 8,
          "position": 1916
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 84,
        "end": 136,
        "startLoc": {
          "line": 84,
          "column": 31,
          "position": 871
        },
        "endLoc": {
          "line": 136,
          "column": 7,
          "position": 1500
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\r\n        await uow.run({}, async () => {\r\n          await repo.update(inv);\r\n        });\r\n\r\n        const found = await repo.findById(order.orderId, inv.workshopId);\r\n        expect(found!.status).toBe(WorkshopInvitationStatus.Declined",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 171,
        "end": 177,
        "startLoc": {
          "line": 171,
          "column": 2,
          "position": 1918
        },
        "endLoc": {
          "line": 177,
          "column": 9,
          "position": 2001
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 140,
        "end": 147,
        "startLoc": {
          "line": 140,
          "column": 2,
          "position": 1539
        },
        "endLoc": {
          "line": 147,
          "column": 9,
          "position": 1624
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ commissionerId: randomUUID(), version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await repo.insert(inv);\r\n        });\r\n\r\n        inv.accept({\r\n          description: 'First'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 186,
        "end": 203,
        "startLoc": {
          "line": 186,
          "column": 38,
          "position": 2102
        },
        "endLoc": {
          "line": 203,
          "column": 8,
          "position": 2315
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 84,
        "end": 137,
        "startLoc": {
          "line": 84,
          "column": 31,
          "position": 871
        },
        "endLoc": {
          "line": 137,
          "column": 7,
          "position": 1509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\r\n  let uow: TypeOrmUoW;\r\n  let container: StartedPostgreSqlContainer;\r\n\r\n  beforeAll(async () => {\r\n    container = await new PostgreSqlContainer('postgres:16-alpine')\r\n      .withDatabase('testdb')\r\n      .withUsername('testuser')\r\n      .withPassword('testpw')\r\n      .start();\r\n\r\n    ds = new DataSource({\r\n      type: 'postgres',\r\n      host: container.getHost(),\r\n      port: container.getPort(),\r\n      username: container.getUsername(),\r\n      password: container.getPassword(),\r\n      database: container.getDatabase(),\r\n      entities: [Order, RequestEntity, WorkshopInvitation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 38,
        "end": 56,
        "startLoc": {
          "line": 38,
          "column": 20,
          "position": 375
        },
        "endLoc": {
          "line": 56,
          "column": 19,
          "position": 553
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 29,
        "end": 47,
        "startLoc": {
          "line": 29,
          "column": 23,
          "position": 331
        },
        "endLoc": {
          "line": 47,
          "column": 6,
          "position": 509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "],\r\n      synchronize: true,\r\n    });\r\n    await ds.initialize();\r\n\r\n    const kafkaMock = { dispatch: jest.fn().mockResolvedValue(undefined) } as KafkaProducerPort<any>;\r\n\r\n    moduleRef = await Test.createTestingModule({\r\n      providers: [\r\n        OrderRepo,\r\n        RequestRepo,\r\n        WorkshopInvitationRepo,\r\n        StagesAggregateRepo",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 56,
        "end": 68,
        "startLoc": {
          "line": 56,
          "column": 6,
          "position": 557
        },
        "endLoc": {
          "line": 68,
          "column": 20,
          "position": 661
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 47,
        "end": 59,
        "startLoc": {
          "line": 47,
          "column": 19,
          "position": 513
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 617
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\r\n        { provide: DataSource, useValue: ds },\r\n        { provide: 'KAFKA_PUBLISHER', useValue: kafkaMock },\r\n        {\r\n          provide: TypeOrmUoW,\r\n          useFactory: (dataSource: DataSource, kafka: any) =>\r\n            new (require('libs/persistence/src/lib/unit-of-work/typeorm.uow').TypeOrmUoW)(\r\n              dataSource,\r\n              kafka,\r\n            ),\r\n          inject: [DataSource, 'KAFKA_PUBLISHER'],\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    orderRepo = moduleRef.get(OrderRepo);\r\n    requestRepo = moduleRef.get(RequestRepo);\r\n    invitationRepo",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 68,
        "end": 85,
        "startLoc": {
          "line": 68,
          "column": 20,
          "position": 662
        },
        "endLoc": {
          "line": 85,
          "column": 15,
          "position": 826
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 58,
        "end": 75,
        "startLoc": {
          "line": 58,
          "column": 23,
          "position": 613
        },
        "endLoc": {
          "line": 75,
          "column": 5,
          "position": 777
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await invitationRepo",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 98,
        "end": 109,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 977
        },
        "endLoc": {
          "line": 109,
          "column": 15,
          "position": 1112
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 122,
        "end": 102,
        "startLoc": {
          "line": 122,
          "column": 2,
          "position": 1345
        },
        "endLoc": {
          "line": 102,
          "column": 5,
          "position": 1101
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 122,
        "end": 132,
        "startLoc": {
          "line": 122,
          "column": 68,
          "position": 1221
        },
        "endLoc": {
          "line": 132,
          "column": 6,
          "position": 1350
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 96,
        "end": 106,
        "startLoc": {
          "line": 96,
          "column": 36,
          "position": 936
        },
        "endLoc": {
          "line": 106,
          "column": 6,
          "position": 1065
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        const s1 = makeStage({\r\n          orderId: order.orderId,\r\n          workshopId: inv.workshopId,\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          description",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 172,
        "end": 187,
        "startLoc": {
          "line": 172,
          "column": 73,
          "position": 1768
        },
        "endLoc": {
          "line": 187,
          "column": 12,
          "position": 1945
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 96,
        "end": 137,
        "startLoc": {
          "line": 96,
          "column": 36,
          "position": 936
        },
        "endLoc": {
          "line": 137,
          "column": 8,
          "position": 1398
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\r\n          version: 1,\r\n        });\r\n        const agg = new StagesAggregate([s1, s2]);\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await invitationRepo.insert(inv);\r\n          await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 195,
        "end": 204,
        "startLoc": {
          "line": 195,
          "column": 4,
          "position": 2019
        },
        "endLoc": {
          "line": 204,
          "column": 6,
          "position": 2117
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 143,
        "end": 152,
        "startLoc": {
          "line": 143,
          "column": 2,
          "position": 1456
        },
        "endLoc": {
          "line": 152,
          "column": 2,
          "position": 1554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        const s1 = makeStage({\r\n          orderId: order.orderId,\r\n          workshopId: inv.workshopId,\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          version: 1,\r\n        });\r\n        const s2 = makeStage({\r\n          orderId: order.orderId,\r\n          workshopId: inv.workshopId,\r\n          stageName: 'B',\r\n          stageOrder: 1,\r\n          version: 1,\r\n        });\r\n        const agg = new StagesAggregate([s1, s2]);\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await invitationRepo.insert(inv);\r\n          await repo.save(agg);\r\n        });\r\n\r\n        agg",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 228,
        "end": 261,
        "startLoc": {
          "line": 228,
          "column": 47,
          "position": 2375
        },
        "endLoc": {
          "line": 261,
          "column": 4,
          "position": 2728
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 96,
        "end": 207,
        "startLoc": {
          "line": 96,
          "column": 36,
          "position": 936
        },
        "endLoc": {
          "line": 207,
          "column": 3,
          "position": 2137
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        const s",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 277,
        "end": 287,
        "startLoc": {
          "line": 277,
          "column": 41,
          "position": 2914
        },
        "endLoc": {
          "line": 287,
          "column": 2,
          "position": 3045
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 96,
        "end": 132,
        "startLoc": {
          "line": 96,
          "column": 36,
          "position": 936
        },
        "endLoc": {
          "line": 132,
          "column": 3,
          "position": 1352
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "]);\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await invitationRepo.insert(inv);\r\n          await repo.save(agg);\r\n        });\r\n\r\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 295,
        "end": 304,
        "startLoc": {
          "line": 295,
          "column": 2,
          "position": 3125
        },
        "endLoc": {
          "line": 304,
          "column": 6,
          "position": 3210
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 198,
        "end": 207,
        "startLoc": {
          "line": 198,
          "column": 3,
          "position": 2052
        },
        "endLoc": {
          "line": 207,
          "column": 3,
          "position": 2137
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ version: 1 });\r\n        const req = makeRequest({ orderId: order.orderId, version: 1 });\r\n        const inv = makeWorkshopInvitation({\r\n          orderId: order.orderId,\r\n          workshopId: randomUUID(),\r\n          version: 1,\r\n        });\r\n\r\n        const s1 = makeStage({\r\n          orderId: order.orderId,\r\n          workshopId: inv.workshopId,\r\n          stageName: 'X'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 331,
        "end": 344,
        "startLoc": {
          "line": 331,
          "column": 19,
          "position": 3440
        },
        "endLoc": {
          "line": 344,
          "column": 4,
          "position": 3604
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 96,
        "end": 135,
        "startLoc": {
          "line": 96,
          "column": 36,
          "position": 936
        },
        "endLoc": {
          "line": 135,
          "column": 4,
          "position": 1385
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\r\n          stageOrder: 1,\r\n          version: 1,\r\n        });\r\n        const agg = new StagesAggregate([s1, s2]);\r\n\r\n        await uow.run({}, async () => {\r\n          await orderRepo.insert(order);\r\n          await requestRepo.insert(req);\r\n          await invitationRepo.insert(inv);\r\n          await repo.save(agg);\r\n        });\r\n\r\n        await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 351,
        "end": 364,
        "startLoc": {
          "line": 351,
          "column": 4,
          "position": 3667
        },
        "endLoc": {
          "line": 364,
          "column": 6,
          "position": 3793
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\stage\\stage.repo.spec.ts",
        "start": 142,
        "end": 207,
        "startLoc": {
          "line": 142,
          "column": 4,
          "position": 1448
        },
        "endLoc": {
          "line": 207,
          "column": 3,
          "position": 2137
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ";\r\n  let uow: TypeOrmUoW;\r\n  let container: StartedPostgreSqlContainer;\r\n\r\n  beforeAll(async () => {\r\n    container = await new PostgreSqlContainer('postgres:16-alpine')\r\n      .withDatabase('testdb')\r\n      .withUsername('testuser')\r\n      .withPassword('testpw')\r\n      .start();\r\n\r\n    ds = new DataSource({\r\n      type: 'postgres',\r\n      host: container.getHost(),\r\n      port: container.getPort(),\r\n      username: container.getUsername(),\r\n      password: container.getPassword(),\r\n      database: container.getDatabase(),\r\n      entities: [Order, RequestEntity, Stage, WorkshopInvitation],\r\n      synchronize: true,\r\n    });\r\n    await ds.initialize();\r\n\r\n    const kafkaMock = { dispatch: jest.fn().mockResolvedValue(undefined) } as KafkaProducerPort<any>;\r\n\r\n    moduleRef = await Test.createTestingModule({\r\n      providers: [\r\n        OrderRepo,\r\n        RequestRepo,\r\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\request\\request.repo.spec.ts",
        "start": 28,
        "end": 57,
        "startLoc": {
          "line": 28,
          "column": 12,
          "position": 285
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 566
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 29,
        "end": 58,
        "startLoc": {
          "line": 29,
          "column": 23,
          "position": 331
        },
        "endLoc": {
          "line": 58,
          "column": 23,
          "position": 612
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\r\n        { provide: DataSource, useValue: ds },\r\n        { provide: 'KAFKA_PUBLISHER', useValue: kafkaMock },\r\n        {\r\n          provide: TypeOrmUoW,\r\n          useFactory: (dataSource: DataSource, kafka: any) =>\r\n            new (require('libs/persistence/src/lib/unit-of-work/typeorm.uow').TypeOrmUoW)(\r\n              dataSource,\r\n              kafka,\r\n            ),\r\n          inject: [DataSource, 'KAFKA_PUBLISHER'],\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    orderRepo = moduleRef.get(OrderRepo);\r\n    requestRepo = moduleRef.get(RequestRepo);\r\n    uow",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\request\\request.repo.spec.ts",
        "start": 56,
        "end": 73,
        "startLoc": {
          "line": 56,
          "column": 12,
          "position": 562
        },
        "endLoc": {
          "line": 73,
          "column": 4,
          "position": 726
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 58,
        "end": 75,
        "startLoc": {
          "line": 58,
          "column": 23,
          "position": 613
        },
        "endLoc": {
          "line": 75,
          "column": 5,
          "position": 777
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\r\n      });\r\n    });\r\n\r\n    it('optimistic lock: stale update fails', async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ commissionerId: randomUUID(), version: 1 });\r\n        const req = makeRequest({\r\n          orderId: order.orderId,\r\n          title",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\request\\request.repo.spec.ts",
        "start": 132,
        "end": 141,
        "startLoc": {
          "line": 132,
          "column": 2,
          "position": 1416
        },
        "endLoc": {
          "line": 141,
          "column": 6,
          "position": 1520
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 182,
        "end": 189,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 2080
        },
        "endLoc": {
          "line": 189,
          "column": 8,
          "position": 2180
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ";\r\n  let uow: TypeOrmUoW;\r\n  let container: StartedPostgreSqlContainer;\r\n\r\n  beforeAll(async () => {\r\n    container = await new PostgreSqlContainer('postgres:16-alpine')\r\n      .withDatabase('testdb')\r\n      .withUsername('testuser')\r\n      .withPassword('testpw')\r\n      .start();\r\n\r\n    ds = new DataSource({\r\n      type: 'postgres',\r\n      host: container.getHost(),\r\n      port: container.getPort(),\r\n      username: container.getUsername(),\r\n      password: container.getPassword(),\r\n      database: container.getDatabase(),\r\n      entities: [Order, RequestEntity, Stage, WorkshopInvitation],\r\n      synchronize: true,\r\n    });\r\n    await ds.initialize();\r\n\r\n    const kafkaMock = { dispatch: jest.fn().mockResolvedValue(undefined) } as KafkaProducerPort<any>;\r\n\r\n    moduleRef = await Test.createTestingModule({\r\n      providers: [\r\n        OrderRepo,\r\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\order\\order.repo.spec.ts",
        "start": 24,
        "end": 52,
        "startLoc": {
          "line": 24,
          "column": 10,
          "position": 248
        },
        "endLoc": {
          "line": 52,
          "column": 2,
          "position": 524
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 29,
        "end": 57,
        "startLoc": {
          "line": 29,
          "column": 23,
          "position": 331
        },
        "endLoc": {
          "line": 57,
          "column": 12,
          "position": 607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n        { provide: DataSource, useValue: ds },\r\n        { provide: 'KAFKA_PUBLISHER', useValue: kafkaMock },\r\n        {\r\n          provide: TypeOrmUoW,\r\n          useFactory: (dataSource: DataSource, kafka: any) =>\r\n            new (require('libs/persistence/src/lib/unit-of-work/typeorm.uow').TypeOrmUoW)(\r\n              dataSource,\r\n              kafka,\r\n            ),\r\n          inject: [DataSource, 'KAFKA_PUBLISHER'],\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    repo",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\order\\order.repo.spec.ts",
        "start": 51,
        "end": 66,
        "startLoc": {
          "line": 51,
          "column": 10,
          "position": 520
        },
        "endLoc": {
          "line": 66,
          "column": 5,
          "position": 656
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\workshop-invitation\\workshop-invitation.repo.spec.ts",
        "start": 58,
        "end": 73,
        "startLoc": {
          "line": 58,
          "column": 23,
          "position": 613
        },
        "endLoc": {
          "line": 73,
          "column": 10,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ commissionerId: randomUUID(), version: 1 });\r\n        await uow.run({}, async () => {\r\n          await repo.insert(order);\r\n        });\r\n        const v1",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\order\\order.repo.spec.ts",
        "start": 93,
        "end": 99,
        "startLoc": {
          "line": 93,
          "column": 36,
          "position": 983
        },
        "endLoc": {
          "line": 99,
          "column": 3,
          "position": 1084
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\order\\order.repo.spec.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 57,
          "position": 752
        },
        "endLoc": {
          "line": 82,
          "column": 6,
          "position": 853
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", async () => {\r\n      await inRollbackedTestTx(ds, async () => {\r\n        const order = makeOrder({ commissionerId: randomUUID(), version: 1 });\r\n        await uow.run({}, async () => {\r\n          await repo.insert(order);\r\n        });\r\n\r\n        // first legit update",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\order\\order.repo.spec.ts",
        "start": 113,
        "end": 120,
        "startLoc": {
          "line": 113,
          "column": 66,
          "position": 1245
        },
        "endLoc": {
          "line": 120,
          "column": 22,
          "position": 1346
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\persistence\\repositories\\order\\order.repo.spec.ts",
        "start": 76,
        "end": 82,
        "startLoc": {
          "line": 76,
          "column": 57,
          "position": 752
        },
        "endLoc": {
          "line": 82,
          "column": 6,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\r\n\r\n        const event1 = makeLMEvent({\r\n          commissionerId: uuid(1),\r\n          eventId: uuid(2),\r\n          eventName,\r\n          bucket: 0,\r\n        });\r\n        const event2 = makeLMEvent({\r\n          commissionerId: uuid(1),\r\n          eventId: uuid(2),\r\n          eventName,\r\n          bucket: 0,\r\n        });\r\n\r\n        const profile = makeVipProfile({\r\n          commissionerId: uuid(1),\r\n          lastMonthEvents: [event1, event2],\r\n          lastPeriodPoints: oldEventBonusPoints * 2,\r\n          isVIP: true",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 614,
        "end": 633,
        "startLoc": {
          "line": 614,
          "column": 3,
          "position": 5715
        },
        "endLoc": {
          "line": 633,
          "column": 5,
          "position": 5880
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 563,
        "end": 582,
        "startLoc": {
          "line": 563,
          "column": 4,
          "position": 5238
        },
        "endLoc": {
          "line": 582,
          "column": 6,
          "position": 5403
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ",\r\n          bonusPolicyVersion: 1,\r\n        });\r\n\r\n        const oldVipPolicy = mkVip({ vipThreshold: oldThreshold, version: 1 });\r\n        const newBonusPolicy = mkBonus({\r\n          version: 2,\r\n          registry: {\r\n            [eventName]: { bonusAmount: newEventBonusPoints },\r\n          } as any,\r\n        });\r\n\r\n        const result: {\r\n          oldLastPeriodPoints: number;\r\n          newLastPeriodPoints: number;\r\n          hadVipBefore: boolean;\r\n          hasVipNow: boolean;\r\n        } = profile.recalculateWithPolicies(\r\n          oldVipPolicy as any,\r\n          newBonusPolicy,\r\n        );\r\n\r\n        expect(result.newLastPeriodPoints).toBe(newEventBonusPoints * 2);\r\n        expect(result.hadVipBefore).toBe(true",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 633,
        "end": 656,
        "startLoc": {
          "line": 633,
          "column": 5,
          "position": 5881
        },
        "endLoc": {
          "line": 656,
          "column": 5,
          "position": 6090
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 582,
        "end": 605,
        "startLoc": {
          "line": 582,
          "column": 6,
          "position": 5404
        },
        "endLoc": {
          "line": 605,
          "column": 6,
          "position": 5613
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "= 20;\r\n\r\n        const event1 = makeLMEvent({\r\n          commissionerId: uuid(1),\r\n          eventId: uuid(2),\r\n          eventName,\r\n          bucket: 0,\r\n        });\r\n        const event2 = makeLMEvent({\r\n          commissionerId: uuid(1),\r\n          eventId: uuid(2),\r\n          eventName,\r\n          bucket: 0,\r\n        });\r\n\r\n        const profile = makeVipProfile({\r\n          commissionerId: uuid(1),\r\n          lastMonthEvents: [event1, event2],\r\n          lastPeriodPoints: eventBonusPoints",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 664,
        "end": 682,
        "startLoc": {
          "line": 664,
          "column": 2,
          "position": 6178
        },
        "endLoc": {
          "line": 682,
          "column": 17,
          "position": 6334
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 614,
        "end": 581,
        "startLoc": {
          "line": 614,
          "column": 2,
          "position": 5712
        },
        "endLoc": {
          "line": 581,
          "column": 20,
          "position": 5391
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\r\n        const eventBonusPoints = 20;\r\n\r\n        const event1 = makeLMEvent({\r\n          commissionerId: uuid(1),\r\n          eventId: uuid(2),\r\n          eventName,\r\n          bucket: 0,\r\n        });\r\n        const event2 = makeLMEvent({\r\n          commissionerId: uuid(1),\r\n          eventId: uuid(2),\r\n          eventName,\r\n          bucket: 0,\r\n        });\r\n\r\n        const profile = makeVipProfile({\r\n          commissionerId: uuid(1),\r\n          lastMonthEvents: [event1, event2],\r\n          lastPeriodPoints: eventBonusPoints * 2,\r\n          isVIP: true",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 712,
        "end": 732,
        "startLoc": {
          "line": 712,
          "column": 5,
          "position": 6650
        },
        "endLoc": {
          "line": 732,
          "column": 5,
          "position": 6826
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 663,
        "end": 683,
        "startLoc": {
          "line": 663,
          "column": 3,
          "position": 6170
        },
        "endLoc": {
          "line": 683,
          "column": 6,
          "position": 6346
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\r\n          bonusPolicyVersion: 1,\r\n        });\r\n\r\n        const newVipPolicy = mkVip({ vipThreshold: newThreshold, version: 2 });\r\n        const oldBonusPolicy = mkBonus({\r\n          version: 1,\r\n          registry: { [eventName]: { bonusAmount: eventBonusPoints } } as any,\r\n        });\r\n\r\n        const result: {\r\n          oldLastPeriodPoints: number;\r\n          newLastPeriodPoints: number;\r\n          hadVipBefore: boolean;\r\n          hasVipNow: boolean;\r\n        } = profile.recalculateWithPolicies(\r\n          newVipPolicy as any,\r\n          oldBonusPolicy,\r\n        );\r\n\r\n        expect(result.newLastPeriodPoints).toBe(eventBonusPoints * 2);\r\n        expect(profile.lastPeriodPoints).toBe(eventBonusPoints * 2);\r\n        expect(result.hadVipBefore).toBe(true",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 732,
        "end": 754,
        "startLoc": {
          "line": 732,
          "column": 5,
          "position": 6827
        },
        "endLoc": {
          "line": 754,
          "column": 5,
          "position": 7050
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.spec.ts",
        "start": 683,
        "end": 705,
        "startLoc": {
          "line": 683,
          "column": 6,
          "position": 6347
        },
        "endLoc": {
          "line": 705,
          "column": 6,
          "position": 6570
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ";\r\n\r\n  //@IsISO8601()\r\n  @UpdateDateColumn({\r\n    name: 'last_updated_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  lastUpdatedAt!: string;\r\n\r\n  //@IsISO8601()\r\n  @CreateDateColumn({\r\n    name: 'created_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  createdAt!: string;\r\n\r\n  @VersionColumn({ name: 'version', type: 'int' })\r\n  version!: number;\r\n\r\n  constructor",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\last-month-event-set.entity.ts",
        "start": 78,
        "end": 99,
        "startLoc": {
          "line": 78,
          "column": 17,
          "position": 590
        },
        "endLoc": {
          "line": 99,
          "column": 12,
          "position": 730
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.ts",
        "start": 95,
        "end": 116,
        "startLoc": {
          "line": 95,
          "column": 7,
          "position": 708
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 848
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ";\r\n\r\n  //@IsISO8601()\r\n  @UpdateDateColumn({\r\n    name: 'last_updated_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  lastUpdatedAt!: string;\r\n\r\n  //@IsISO8601()\r\n  @CreateDateColumn({\r\n    name: 'created_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  createdAt!: string;\r\n\r\n  @VersionColumn({ name: 'version', type: 'int' })\r\n  version!: number;\r\n\r\n  @ManyToOne",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\common\\bonus-event.entity.ts",
        "start": 55,
        "end": 76,
        "startLoc": {
          "line": 55,
          "column": 15,
          "position": 455
        },
        "endLoc": {
          "line": 76,
          "column": 10,
          "position": 596
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.ts",
        "start": 95,
        "end": 116,
        "startLoc": {
          "line": 95,
          "column": 7,
          "position": 708
        },
        "endLoc": {
          "line": 116,
          "column": 10,
          "position": 849
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "!: number;\r\n\r\n  //@IsISO8601()\r\n  @UpdateDateColumn({\r\n    name: 'last_updated_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  lastUpdatedAt!: string;\r\n\r\n  //@IsISO8601()\r\n  @CreateDateColumn({\r\n    name: 'created_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  createdAt!: string;\r\n\r\n  @VersionColumn({ name: 'version', type: 'int' })\r\n  version!: number;\r\n\r\n  @OneToOne",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\additive-bonus\\additive-bonus.entity.ts",
        "start": 77,
        "end": 98,
        "startLoc": {
          "line": 77,
          "column": 19,
          "position": 596
        },
        "endLoc": {
          "line": 98,
          "column": 9,
          "position": 741
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.ts",
        "start": 95,
        "end": 116,
        "startLoc": {
          "line": 95,
          "column": 19,
          "position": 704
        },
        "endLoc": {
          "line": 116,
          "column": 10,
          "position": 849
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ")\r\n      .take(limit)\r\n      .skip(offset);\r\n\r\n    try {\r\n      const [rows, total] = await Promise.all([q.getMany(), this.countFor(q)]);\r\n      return { total, rows };\r\n    } catch (error) {\r\n      remapTypeOrmPgErrorToInfra(error);\r\n    }\r\n  }\r\n\r\n  /** Materialized → you must refresh explicitly (this uses one tiny SQL statement; no QB). */",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\read-model\\infra\\persistence\\repositories\\order-history.repository.ts",
        "start": 69,
        "end": 81,
        "startLoc": {
          "line": 69,
          "column": 13,
          "position": 655
        },
        "endLoc": {
          "line": 81,
          "column": 93,
          "position": 765
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\read-projection\\infra\\persistence\\repositories\\bonus-read.repository.ts",
        "start": 64,
        "end": 79,
        "startLoc": {
          "line": 64,
          "column": 6,
          "position": 624
        },
        "endLoc": {
          "line": 79,
          "column": 8,
          "position": 740
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": boolean;\r\n  } {\r\n    const stage = this.getStageByName(data.stageName);\r\n\r\n    if (stage.stageOrder !== this.currentStage) {\r\n      throw new DomainError({\r\n        errorObject: OrderDomainErrorRegistry.byCode.INVARIANTS_VIOLATED,\r\n        details: {\r\n          description: `Incorrect completionMarked order, current stage is ${this.stages[this.currentStage].stageName}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    stage",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.ts",
        "start": 121,
        "end": 134,
        "startLoc": {
          "line": 121,
          "column": 13,
          "position": 983
        },
        "endLoc": {
          "line": 134,
          "column": 6,
          "position": 1101
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.ts",
        "start": 97,
        "end": 110,
        "startLoc": {
          "line": 97,
          "column": 15,
          "position": 747
        },
        "endLoc": {
          "line": 110,
          "column": 6,
          "position": 865
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ";\r\n\r\n  @IsOptional()\r\n  //@IsISO8601()\r\n  @UpdateDateColumn({\r\n    name: 'last_updated_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  lastUpdatedAt!: string;\r\n\r\n  @IsOptional()\r\n  //@IsISO8601()\r\n  @CreateDateColumn({\r\n    name: 'created_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  createdAt!: string;\r\n\r\n  @IsOptional()\r\n  @IsInt()\r\n  @VersionColumn({ name: 'version', type: 'int' })\r\n  version!: number;\r\n\r\n  constructor",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.ts",
        "start": 254,
        "end": 279,
        "startLoc": {
          "line": 254,
          "column": 7,
          "position": 2137
        },
        "endLoc": {
          "line": 279,
          "column": 12,
          "position": 2305
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\workshop-invitation\\workshop-invitation.entity.ts",
        "start": 132,
        "end": 157,
        "startLoc": {
          "line": 132,
          "column": 25,
          "position": 1042
        },
        "endLoc": {
          "line": 157,
          "column": 2,
          "position": 1210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", () => {\r\n      const s0 = new Stage(\r\n        makeStageData({\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          needsConfirmation: true,\r\n        }),\r\n      );\r\n      const s1 = new Stage(makeStageData({ stageName: 'B', stageOrder: 1 }));\r\n      const s2 = new Stage(makeStageData({ stageName: 'C', stageOrder: 2 }));\r\n\r\n      s0",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 89,
        "end": 100,
        "startLoc": {
          "line": 89,
          "column": 67,
          "position": 1177
        },
        "endLoc": {
          "line": 100,
          "column": 3,
          "position": 1308
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 64,
        "end": 75,
        "startLoc": {
          "line": 64,
          "column": 42,
          "position": 869
        },
        "endLoc": {
          "line": 75,
          "column": 6,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", () => {\r\n      const s0 = new Stage(\r\n        makeStageData({\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          needsConfirmation: true,\r\n        }),\r\n      );\r\n      const s1 = new Stage(makeStageData({ stageName: 'B', stageOrder: 1 }));\r\n      const s2 = new Stage(makeStageData({ stageName: 'C', stageOrder: 2 }));\r\n\r\n      s0.status = StageStatus.Completed;\r\n      const agg = new StagesAggregate([s0, s1, s2]);\r\n\r\n      expect",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 110,
        "end": 124,
        "startLoc": {
          "line": 110,
          "column": 34,
          "position": 1440
        },
        "endLoc": {
          "line": 124,
          "column": 7,
          "position": 1610
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 64,
        "end": 103,
        "startLoc": {
          "line": 64,
          "column": 42,
          "position": 869
        },
        "endLoc": {
          "line": 103,
          "column": 6,
          "position": 1347
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", () => {\r\n      const s0 = new Stage(\r\n        makeStageData({\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          needsConfirmation: true,\r\n        }),\r\n      );\r\n      const s1 = new Stage(makeStageData({ stageName: 'B', stageOrder: 1 }));\r\n      const s2 = new Stage(makeStageData({ stageName: 'C', stageOrder: 2 }));\r\n      // If all completed, sentinel = amountOfStages",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 137,
        "end": 147,
        "startLoc": {
          "line": 137,
          "column": 78,
          "position": 1779
        },
        "endLoc": {
          "line": 147,
          "column": 47,
          "position": 1908
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 64,
        "end": 75,
        "startLoc": {
          "line": 64,
          "column": 42,
          "position": 869
        },
        "endLoc": {
          "line": 75,
          "column": 6,
          "position": 1000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", () => {\r\n      const s0 = new Stage(\r\n        makeStageData({\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          needsConfirmation: true,\r\n        }),\r\n      );\r\n      const s1 = new Stage(makeStageData({ stageName: 'B', stageOrder: 1 }));\r\n      const s2 = new Stage(makeStageData({ stageName: 'C', stageOrder: 2 }));\r\n      // If all completed, sentinel = amountOfStages\r\n      s0.status = StageStatus.Completed;\r\n      s1.status = StageStatus.Completed;\r\n      s2.status = StageStatus.Pending",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 156,
        "end": 169,
        "startLoc": {
          "line": 156,
          "column": 75,
          "position": 2005
        },
        "endLoc": {
          "line": 169,
          "column": 8,
          "position": 2172
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 64,
        "end": 150,
        "startLoc": {
          "line": 64,
          "column": 42,
          "position": 869
        },
        "endLoc": {
          "line": 150,
          "column": 10,
          "position": 1946
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", () => {\r\n      const s0 = new Stage(\r\n        makeStageData({\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          needsConfirmation: true,\r\n        }),\r\n      );\r\n      const s1 = new Stage(makeStageData({ stageName: 'B', stageOrder: 1 }));\r\n      const s2 = new Stage(makeStageData({ stageName: 'C', stageOrder: 2 }));\r\n\r\n      s0.status = StageStatus.Completed;\r\n      s1",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 177,
        "end": 189,
        "startLoc": {
          "line": 177,
          "column": 62,
          "position": 2250
        },
        "endLoc": {
          "line": 189,
          "column": 3,
          "position": 2394
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 64,
        "end": 102,
        "startLoc": {
          "line": 64,
          "column": 42,
          "position": 869
        },
        "endLoc": {
          "line": 102,
          "column": 6,
          "position": 1323
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", () => {\r\n      const s0 = new Stage(\r\n        makeStageData({\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          needsConfirmation: true,\r\n        }),\r\n      );\r\n      const s1 = new Stage(makeStageData({ stageName: 'B', stageOrder: 1 }));\r\n      const s2 = new Stage(makeStageData({ stageName: 'C', stageOrder: 2 }));\r\n      s0.status = StageStatus.AwaitingConfirmation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 196,
        "end": 206,
        "startLoc": {
          "line": 196,
          "column": 47,
          "position": 2472
        },
        "endLoc": {
          "line": 206,
          "column": 21,
          "position": 2609
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 64,
        "end": 100,
        "startLoc": {
          "line": 64,
          "column": 42,
          "position": 869
        },
        "endLoc": {
          "line": 100,
          "column": 10,
          "position": 1316
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", () => {\r\n      const s0 = new Stage(\r\n        makeStageData({\r\n          stageName: 'A',\r\n          stageOrder: 0,\r\n          needsConfirmation: true,\r\n        }),\r\n      );\r\n      const s1 = new Stage(makeStageData({ stageName: 'B', stageOrder: 1 }));\r\n      const s2 = new Stage(makeStageData({ stageName: 'C', stageOrder: 2 }));\r\n      s0.status = StageStatus.Pending",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 218,
        "end": 228,
        "startLoc": {
          "line": 218,
          "column": 72,
          "position": 2747
        },
        "endLoc": {
          "line": 228,
          "column": 8,
          "position": 2884
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\stage\\stage.entity.spec.ts",
        "start": 64,
        "end": 100,
        "startLoc": {
          "line": 64,
          "column": 42,
          "position": 869
        },
        "endLoc": {
          "line": 100,
          "column": 10,
          "position": 1316
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ";\r\n\r\n  //@IsISO8601()\r\n  @UpdateDateColumn({\r\n    name: 'last_updated_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  lastUpdatedAt!: string;\r\n\r\n  //@IsISO8601()\r\n  @CreateDateColumn({\r\n    name: 'created_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  createdAt!: string;\r\n\r\n  @IsInt",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\request\\request.entity.ts",
        "start": 72,
        "end": 90,
        "startLoc": {
          "line": 72,
          "column": 7,
          "position": 547
        },
        "endLoc": {
          "line": 90,
          "column": 6,
          "position": 656
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\domain\\aggregates\\vip-profile\\vip-profile.entity.ts",
        "start": 95,
        "end": 113,
        "startLoc": {
          "line": 95,
          "column": 7,
          "position": 708
        },
        "endLoc": {
          "line": 113,
          "column": 14,
          "position": 817
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "!: string;\r\n\r\n  //@IsISO8601()\r\n  @UpdateDateColumn({\r\n    name: 'last_updated_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  lastUpdatedAt!: string;\r\n\r\n  //@IsISO8601()\r\n  @CreateDateColumn({\r\n    name: 'created_at',\r\n    type: 'timestamptz',\r\n    transformer: IsoDateTransformer,\r\n  })\r\n  createdAt!: string;\r\n\r\n  @IsInt()\r\n  @VersionColumn({ name: 'version', type: 'int' })\r\n  version!: number;\r\n\r\n  @IsBoolean",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\order\\order.entity.ts",
        "start": 62,
        "end": 84,
        "startLoc": {
          "line": 62,
          "column": 15,
          "position": 431
        },
        "endLoc": {
          "line": 84,
          "column": 10,
          "position": 583
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\request\\request.entity.ts",
        "start": 72,
        "end": 94,
        "startLoc": {
          "line": 72,
          "column": 7,
          "position": 543
        },
        "endLoc": {
          "line": 94,
          "column": 10,
          "position": 695
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\r\n\r\n    this.assertCurrentStateIs(assumed, this.state, action);\r\n\r\n    const outcome: Outcome<typeof assumed, typeof action> = this.state.handle(\r\n      action,\r\n    ) satisfies LegalOutcome<typeof assumed, typeof action>;\r\n\r\n    this.state = new outcome.nextState();\r\n\r\n    this.lastUpdatedAt = isoNow();\r\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\order\\order.entity.ts",
        "start": 120,
        "end": 131,
        "startLoc": {
          "line": 120,
          "column": 18,
          "position": 957
        },
        "endLoc": {
          "line": 131,
          "column": 5,
          "position": 1069
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\order\\order.entity.ts",
        "start": 105,
        "end": 116,
        "startLoc": {
          "line": 105,
          "column": 27,
          "position": 809
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 921
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ");\r\n      o.cancelOrder();\r\n      expect(o.state).toBeInstanceOf(CancelDisputeOpened);\r\n      expect(o.lastUpdatedAt).not.toBe(T0);\r\n      expect(o.isTerminated).toBe(true);\r\n    });\r\n\r\n    it('illegal: TransitionToPendingCompletion throws; lastUpdatedAt unchanged; not terminated'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\order\\order.entity.spec.ts",
        "start": 112,
        "end": 119,
        "startLoc": {
          "line": 112,
          "column": 18,
          "position": 1209
        },
        "endLoc": {
          "line": 119,
          "column": 89,
          "position": 1280
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\order\\order.entity.spec.ts",
        "start": 81,
        "end": 88,
        "startLoc": {
          "line": 81,
          "column": 18,
          "position": 838
        },
        "endLoc": {
          "line": 88,
          "column": 73,
          "position": 909
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\r\n      expect(() => o.transitionToPendingCompletion()).toThrow();\r\n      expect(() => o.complete()).toThrow();\r\n      expect(() => o.cancelOrder()).toThrow();\r\n      expect(o.lastUpdatedAt).toBe(T0);\r\n    });\r\n  });\r\n\r\n  // Sanity: handlers encode the transition table; no time checks",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\order\\order.entity.spec.ts",
        "start": 161,
        "end": 169,
        "startLoc": {
          "line": 161,
          "column": 20,
          "position": 1820
        },
        "endLoc": {
          "line": 169,
          "column": 64,
          "position": 1917
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\domain\\entities\\order\\order.entity.spec.ts",
        "start": 151,
        "end": 159,
        "startLoc": {
          "line": 151,
          "column": 10,
          "position": 1684
        },
        "endLoc": {
          "line": 159,
          "column": 9,
          "position": 1781
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ") {\r\n    return this.uow.runWithRetry({}, async () => {\r\n      const order = await this.ordersRepo.findById(cmd.orderId);\r\n      assertIsFound(order, Order, {\r\n        orderId: cmd.orderId,\r\n        workshopId: cmd.workshopId,\r\n      });\r\n\r\n      const workshopInvitation = await this.workshopInvitationsRepo.findById(\r\n        cmd.orderId,\r\n        cmd.workshopId,\r\n      );\r\n      assertIsFound(workshopInvitation, WorkshopInvitation, {\r\n        orderId: cmd.orderId,\r\n        workshopId: cmd.workshopId,\r\n      });\r\n\r\n      workshopInvitation",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-response.service.ts",
        "start": 81,
        "end": 98,
        "startLoc": {
          "line": 81,
          "column": 33,
          "position": 764
        },
        "endLoc": {
          "line": 98,
          "column": 19,
          "position": 931
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-response.service.ts",
        "start": 34,
        "end": 51,
        "startLoc": {
          "line": 34,
          "column": 32,
          "position": 314
        },
        "endLoc": {
          "line": 51,
          "column": 6,
          "position": 481
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": isoNow(),\r\n        orderID: order.orderId,\r\n        schemaV: 1,\r\n        workshopID: cmd.workshopId,\r\n      };\r\n\r\n      enqueueOutbox({\r\n        id: randomUUID(),\r\n        createdAt: isoNow(),\r\n        payload: { ...eventPayload },\r\n      });\r\n    });\r\n  }\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-response.service.ts",
        "start": 107,
        "end": 120,
        "startLoc": {
          "line": 107,
          "column": 11,
          "position": 1013
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 1111
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-response.service.ts",
        "start": 67,
        "end": 80,
        "startLoc": {
          "line": 67,
          "column": 11,
          "position": 653
        },
        "endLoc": {
          "line": 80,
          "column": 37,
          "position": 752
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ") {\r\n    return this.uow.runWithRetry({}, async () => {\r\n      const workshopInvitation = await this.workshopInvitationsRepo.findById(\r\n        cmd.orderId,\r\n        cmd.workshopId,\r\n      );\r\n      assertIsFound(workshopInvitation, WorkshopInvitation, {\r\n        orderId: cmd.orderId,\r\n        workshopId: cmd.workshopId,\r\n      });\r\n\r\n      workshopInvitation.editDescription",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-edit.service.ts",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 41,
          "position": 473
        },
        "endLoc": {
          "line": 70,
          "column": 16,
          "position": 580
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-edit.service.ts",
        "start": 31,
        "end": 42,
        "startLoc": {
          "line": 31,
          "column": 36,
          "position": 276
        },
        "endLoc": {
          "line": 42,
          "column": 11,
          "position": 383
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ") {\r\n    return this.uow.runWithRetry({}, async () => {\r\n      const workshopInvitation = await this.workshopInvitationsRepo.findById(\r\n        cmd.orderId,\r\n        cmd.workshopId,\r\n      );\r\n      assertIsFound(workshopInvitation, WorkshopInvitation, {\r\n        orderId: cmd.orderId,\r\n        workshopId: cmd.workshopId,\r\n      });\r\n\r\n      workshopInvitation.editDeadline",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-edit.service.ts",
        "start": 87,
        "end": 98,
        "startLoc": {
          "line": 87,
          "column": 38,
          "position": 670
        },
        "endLoc": {
          "line": 98,
          "column": 13,
          "position": 777
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\workshop\\workshop-invitation-edit.service.ts",
        "start": 31,
        "end": 42,
        "startLoc": {
          "line": 31,
          "column": 36,
          "position": 276
        },
        "endLoc": {
          "line": 42,
          "column": 11,
          "position": 383
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const stages = await this.stagesAggregateRepo.findByWorkshopInvitation({\r\n        orderId: cmd.orderId,\r\n        workshopId: cmd.workshopId,\r\n      });\r\n      assertIsFound(stages, StagesAggregate, {\r\n        orderId: cmd.orderId,\r\n        commissionerId: cmd.commissionerId,\r\n        workshopId: cmd.workshopId,\r\n      });\r\n\r\n      const { allCompleted }",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\stage\\stage-completion.service.ts",
        "start": 123,
        "end": 133,
        "startLoc": {
          "line": 123,
          "column": 7,
          "position": 1082
        },
        "endLoc": {
          "line": 133,
          "column": 2,
          "position": 1182
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\stage\\stage-completion.service.ts",
        "start": 29,
        "end": 40,
        "startLoc": {
          "line": 29,
          "column": 7,
          "position": 283
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 384
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "const stageConfirmedEventPayload: StageConfirmedEventV1 = {\r\n        commissionerId: order.commissionerId,\r\n        confirmedAt: isoNow(),\r\n        eventName: 'StageConfirmed',\r\n        orderID: order.orderId,\r\n        schemaV: 1,\r\n        stageName: cmd.payload.stageName,\r\n        workshopID: cmd.workshopId,\r\n      };\r\n      enqueueOutbox({\r\n        id: randomUUID(),\r\n        createdAt: isoNow(),\r\n        payload: {\r\n          ...stageConfirmedEventPayload,\r\n        },\r\n      });\r\n\r\n      if",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\stage\\stage-completion.service.ts",
        "start": 139,
        "end": 156,
        "startLoc": {
          "line": 139,
          "column": 7,
          "position": 1228
        },
        "endLoc": {
          "line": 156,
          "column": 3,
          "position": 1366
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\stage\\stage-completion.service.ts",
        "start": 74,
        "end": 90,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 675
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 811
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ") {\r\n    return this.uow.runWithRetry({}, async () => {\r\n      const request = await this.requestsRepo.findById(cmd.orderId);\r\n      assertIsFound(request, RequestEntity, {\r\n        orderId: cmd.orderId,\r\n      });\r\n\r\n      request.editDescription",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\request\\request-edit.service.ts",
        "start": 38,
        "end": 45,
        "startLoc": {
          "line": 38,
          "column": 30,
          "position": 315
        },
        "endLoc": {
          "line": 45,
          "column": 16,
          "position": 398
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\request\\request-edit.service.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 25,
          "position": 160
        },
        "endLoc": {
          "line": 26,
          "column": 11,
          "position": 245
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ") {\r\n    return this.uow.runWithRetry({}, async () => {\r\n      const request = await this.requestsRepo.findById(cmd.orderId);\r\n      assertIsFound(request, RequestEntity, {\r\n        orderId: cmd.orderId,\r\n      });\r\n\r\n      request.editDeadline",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\request\\request-edit.service.ts",
        "start": 61,
        "end": 68,
        "startLoc": {
          "line": 61,
          "column": 27,
          "position": 484
        },
        "endLoc": {
          "line": 68,
          "column": 13,
          "position": 567
        }
      },
      "secondFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\application\\services\\request\\request-edit.service.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 25,
          "position": 160
        },
        "endLoc": {
          "line": 26,
          "column": 11,
          "position": 245
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ": DataSourceOptions = {\r\n  type: 'postgres',\r\n  ...(process.env.PG_URL\r\n    ? {\r\n        url: process.env.PG_URL,\r\n        ssl:\r\n          process.env.PG_SSL === 'true' ? { rejectUnauthorized: false } : false,\r\n      }\r\n    : {\r\n        host: process.env.PG_HOST ?? 'localhost',\r\n        port: parseInt(process.env.PG_PORT ?? '5432', 10),\r\n        username: process.env.PG_USER ?? 'app',\r\n        password: process.env.PG_PASSWORD ?? 'app',\r\n        database: process.env.PG_DB ?? 'app',\r\n        schema: process.env.DB_SCHEMA || 'public',\r\n        \r\n        ssl:\r\n          process.env.PG_SSL === 'true' ? { rejectUnauthorized: false } : false,\r\n      }),\r\n  entities: [AdditiveBonus",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\config\\typeorm-config.ts",
        "start": 8,
        "end": 27,
        "startLoc": {
          "line": 8,
          "column": 29,
          "position": 91
        },
        "endLoc": {
          "line": 27,
          "column": 14,
          "position": 332
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\read-projection\\infra\\config\\typeorm-config.ts",
        "start": 5,
        "end": 23,
        "startLoc": {
          "line": 5,
          "column": 24,
          "position": 49
        },
        "endLoc": {
          "line": 23,
          "column": 20,
          "position": 288
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "logging: process.env.TYPEORM_LOGGING\r\n    ? (process.env.TYPEORM_LOGGING.split(',') as DataSourceOptions['logging'])\r\n    : ['error', 'warn'],\r\n  maxQueryExecutionTime: parseInt(process.env.TYPEORM_SLOW_MS ?? '500', 10),\r\n  extra: {\r\n    max: parseInt(process.env.PG_POOL_MAX ?? '10', 10),\r\n    min: parseInt(process.env.PG_POOL_MIN ?? '0', 10),\r\n    idleTimeoutMillis: parseInt(process.env.PG_POOL_IDLE_MS ?? '30000', 10),\r\n    connectionTimeoutMillis: parseInt(\r\n      process.env.PG_POOL_CONN_MS ?? '10000',\r\n      10,\r\n    ),\r\n  },\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\config\\typeorm-config.ts",
        "start": 34,
        "end": 47,
        "startLoc": {
          "line": 34,
          "column": 3,
          "position": 432
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 615
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\read-projection\\infra\\config\\typeorm-config.ts",
        "start": 31,
        "end": 44,
        "startLoc": {
          "line": 31,
          "column": 3,
          "position": 382
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 565
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ": DataSourceOptions = {\r\n  type: 'postgres',\r\n  ...(process.env.PG_URL\r\n    ? {\r\n      url: process.env.PG_URL,\r\n      ssl:\r\n        process.env.PG_SSL === 'true' ? { rejectUnauthorized: false } : false,\r\n    }\r\n    : {\r\n      host: process.env.PG_HOST ?? 'localhost',\r\n      port: parseInt(process.env.PG_PORT ?? '5432', 10),\r\n      username: process.env.PG_USER ?? 'app',\r\n      password: process.env.PG_PASSWORD ?? 'app',\r\n      database: process.env.PG_DB ?? 'app',\r\n      schema: process.env.DB_SCHEMA || 'public',\r\n      ssl:\r\n        process.env.PG_SSL === 'true' ? { rejectUnauthorized: false } : false,\r\n    }),\r\n  entities: [OrderHistoryProjection",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\read-model\\infra\\config\\typeorm-config.ts",
        "start": 5,
        "end": 23,
        "startLoc": {
          "line": 5,
          "column": 24,
          "position": 49
        },
        "endLoc": {
          "line": 23,
          "column": 23,
          "position": 288
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\read-projection\\infra\\config\\typeorm-config.ts",
        "start": 5,
        "end": 23,
        "startLoc": {
          "line": 5,
          "column": 24,
          "position": 49
        },
        "endLoc": {
          "line": 23,
          "column": 20,
          "position": 288
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", \r\n  logging: process.env.TYPEORM_LOGGING\r\n    ? (process.env.TYPEORM_LOGGING.split(',') as DataSourceOptions['logging'])\r\n    : ['error', 'warn'],\r\n  maxQueryExecutionTime: parseInt(process.env.TYPEORM_SLOW_MS ?? '500', 10),\r\n  extra: {\r\n    max: parseInt(process.env.PG_POOL_MAX ?? '10', 10),\r\n    min: parseInt(process.env.PG_POOL_MIN ?? '0', 10),\r\n    idleTimeoutMillis: parseInt(process.env.PG_POOL_IDLE_MS ?? '30000', 10),\r\n    connectionTimeoutMillis: parseInt(\r\n      process.env.PG_POOL_CONN_MS ?? '10000',\r\n      10,\r\n    ),\r\n  },\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\read-model\\infra\\config\\typeorm-config.ts",
        "start": 29,
        "end": 43,
        "startLoc": {
          "line": 29,
          "column": 7,
          "position": 360
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 547
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\read-projection\\infra\\config\\typeorm-config.ts",
        "start": 30,
        "end": 44,
        "startLoc": {
          "line": 30,
          "column": 5,
          "position": 378
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 565
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "},\r\n\r\n\r\n        LoggingInterceptor,\r\n        HttpErrorInterceptor,\r\n        KafkaErrorInterceptor,\r\n\r\n        {\r\n            provide: HttpErrorInterceptorOptions, useValue: {\r\n                includeTupleInBody: false,\r\n                retryAfterSeconds: 1,\r\n                addNoStoreHeaders: true,\r\n            }\r\n        },\r\n        {\r\n            provide: KafkaErrorInterceptorOptions, useValue: {\r\n                maxRetries: 5\r\n            }\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n    ]\r\n\r\n})\r\nexport class OrderWorkflowModule",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\di\\order-workflow.module.ts",
        "start": 88,
        "end": 115,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 810
        },
        "endLoc": {
          "line": 115,
          "column": 20,
          "position": 942
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\di\\bonus-processor.module.ts",
        "start": 63,
        "end": 82,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 551
        },
        "endLoc": {
          "line": 82,
          "column": 21,
          "position": 667
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": DataSourceOptions = {\r\n  type: 'postgres',\r\n  ...(process.env.PG_URL\r\n    ? {\r\n      url: process.env.PG_URL,\r\n      ssl:\r\n        process.env.PG_SSL === 'true' ? { rejectUnauthorized: false } : false,\r\n    }\r\n    : {\r\n      host: process.env.PG_HOST ?? 'localhost',\r\n      port: parseInt(process.env.PG_PORT ?? '5432', 10),\r\n      username: process.env.PG_USER ?? 'app',\r\n      password: process.env.PG_PASSWORD ?? 'app',\r\n      database: process.env.PG_DB ?? 'app',\r\n      schema: process.env.DB_SCHEMA || 'order-service'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\config\\typeorm-config.ts",
        "start": 9,
        "end": 23,
        "startLoc": {
          "line": 9,
          "column": 28,
          "position": 105
        },
        "endLoc": {
          "line": 23,
          "column": 16,
          "position": 296
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\read-projection\\infra\\config\\typeorm-config.ts",
        "start": 5,
        "end": 19,
        "startLoc": {
          "line": 5,
          "column": 24,
          "position": 49
        },
        "endLoc": {
          "line": 19,
          "column": 9,
          "position": 240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "migrationsRun: process.env.TYPEORM_MIGRATIONS_RUN === 'true', // prod friendly\r\n  logging: process.env.TYPEORM_LOGGING\r\n    ? (process.env.TYPEORM_LOGGING.split(',') as DataSourceOptions['logging'])\r\n    : ['error', 'warn'],\r\n  maxQueryExecutionTime: parseInt(process.env.TYPEORM_SLOW_MS ?? '500', 10),\r\n  extra: {\r\n    max: parseInt(process.env.PG_POOL_MAX ?? '10', 10),\r\n    min: parseInt(process.env.PG_POOL_MIN ?? '0', 10),\r\n    idleTimeoutMillis: parseInt(process.env.PG_POOL_IDLE_MS ?? '30000', 10),\r\n    connectionTimeoutMillis: parseInt(\r\n      process.env.PG_POOL_CONN_MS ?? '10000',\r\n      10,\r\n    ),\r\n  },\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service\\src\\app\\order-workflow\\infra\\config\\typeorm-config.ts",
        "start": 32,
        "end": 46,
        "startLoc": {
          "line": 32,
          "column": 3,
          "position": 417
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 623
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service\\src\\app\\modules\\bonus-processor\\infra\\config\\typeorm-config.ts",
        "start": 33,
        "end": 44,
        "startLoc": {
          "line": 33,
          "column": 3,
          "position": 409
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 565
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import axios from 'axios';\n\ndescribe('GET /api', () => {\n  it('should return a message', async () => {\n    const res = await axios.get(`/api`);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff-e2e\\src\\workshop-mobile-bff\\workshop-mobile-bff.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\workshop-service\\workshop-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "/* eslint-disable */\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n  axios.defaults.baseURL = `http://${host}:${port}`;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { killPort } from '@nx/node/utils';\r\n/* eslint-disable */\r\n\r\nmodule.exports = async function () {\r\n  // Put clean up logic here (e.g. stopping services, docker-compose, etc.).\r\n  // Hint: `globalThis` is shared between setup and teardown.\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await killPort(port);\r\n  console.log(globalThis.__TEARDOWN_MESSAGE__);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { waitForPortOpen } from '@nx/node/utils';\r\n\r\n/* eslint-disable */\r\nvar __TEARDOWN_MESSAGE__: string;\r\n\r\nmodule.exports = async function () {\r\n  // Start services that that the app needs to run (e.g. database, docker-compose, etc.).\r\n  console.log('\\nSetting up...\\n');\r\n\r\n  const host = process.env.HOST ?? 'localhost';\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await waitForPortOpen(port, { host });\r\n\r\n  // Hint: Use `globalThis` to pass variables to global teardown.\r\n  globalThis.__TEARDOWN_MESSAGE__ = '\\nTearing down...\\n';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import { Test } from '@nestjs/testing';\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      expect(service.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      const appController = app.get<AppController>(AppController);\n      expect(appController.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import axios from 'axios';\n\ndescribe('GET /api', () => {\n  it('should return a message', async () => {\n    const res = await axios.get(`/api`);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff-e2e\\src\\web-bff\\web-bff.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\workshop-service\\workshop-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "/* eslint-disable */\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n  axios.defaults.baseURL = `http://${host}:${port}`;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { killPort } from '@nx/node/utils';\r\n/* eslint-disable */\r\n\r\nmodule.exports = async function () {\r\n  // Put clean up logic here (e.g. stopping services, docker-compose, etc.).\r\n  // Hint: `globalThis` is shared between setup and teardown.\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await killPort(port);\r\n  console.log(globalThis.__TEARDOWN_MESSAGE__);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { waitForPortOpen } from '@nx/node/utils';\r\n\r\n/* eslint-disable */\r\nvar __TEARDOWN_MESSAGE__: string;\r\n\r\nmodule.exports = async function () {\r\n  // Start services that that the app needs to run (e.g. database, docker-compose, etc.).\r\n  console.log('\\nSetting up...\\n');\r\n\r\n  const host = process.env.HOST ?? 'localhost';\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await waitForPortOpen(port, { host });\r\n\r\n  // Hint: Use `globalThis` to pass variables to global teardown.\r\n  globalThis.__TEARDOWN_MESSAGE__ = '\\nTearing down...\\n';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import { Test } from '@nestjs/testing';\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      expect(service.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      const appController = app.get<AppController>(AppController);\n      expect(appController.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "/* eslint-disable */\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n  axios.defaults.baseURL = `http://${host}:${port}`;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { killPort } from '@nx/node/utils';\r\n/* eslint-disable */\r\n\r\nmodule.exports = async function () {\r\n  // Put clean up logic here (e.g. stopping services, docker-compose, etc.).\r\n  // Hint: `globalThis` is shared between setup and teardown.\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await killPort(port);\r\n  console.log(globalThis.__TEARDOWN_MESSAGE__);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { waitForPortOpen } from '@nx/node/utils';\r\n\r\n/* eslint-disable */\r\nvar __TEARDOWN_MESSAGE__: string;\r\n\r\nmodule.exports = async function () {\r\n  // Start services that that the app needs to run (e.g. database, docker-compose, etc.).\r\n  console.log('\\nSetting up...\\n');\r\n\r\n  const host = process.env.HOST ?? 'localhost';\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await waitForPortOpen(port, { host });\r\n\r\n  // Hint: Use `globalThis` to pass variables to global teardown.\r\n  globalThis.__TEARDOWN_MESSAGE__ = '\\nTearing down...\\n';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import axios from 'axios';\n\ndescribe('GET /api', () => {\n  it('should return a message', async () => {\n    const res = await axios.get(`/api`);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service-e2e\\src\\review-service\\review-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\workshop-service\\workshop-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import { Test } from '@nestjs/testing';\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      expect(service.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      const appController = app.get<AppController>(AppController);\n      expect(appController.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "/* eslint-disable */\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n  axios.defaults.baseURL = `http://${host}:${port}`;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { killPort } from '@nx/node/utils';\r\n/* eslint-disable */\r\n\r\nmodule.exports = async function () {\r\n  // Put clean up logic here (e.g. stopping services, docker-compose, etc.).\r\n  // Hint: `globalThis` is shared between setup and teardown.\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await killPort(port);\r\n  console.log(globalThis.__TEARDOWN_MESSAGE__);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { waitForPortOpen } from '@nx/node/utils';\r\n\r\n/* eslint-disable */\r\nvar __TEARDOWN_MESSAGE__: string;\r\n\r\nmodule.exports = async function () {\r\n  // Start services that that the app needs to run (e.g. database, docker-compose, etc.).\r\n  console.log('\\nSetting up...\\n');\r\n\r\n  const host = process.env.HOST ?? 'localhost';\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await waitForPortOpen(port, { host });\r\n\r\n  // Hint: Use `globalThis` to pass variables to global teardown.\r\n  globalThis.__TEARDOWN_MESSAGE__ = '\\nTearing down...\\n';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import axios from 'axios';\n\ndescribe('GET /api', () => {\n  it('should return a message', async () => {\n    const res = await axios.get(`/api`);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service-e2e\\src\\report-service\\report-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\workshop-service\\workshop-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import { Test } from '@nestjs/testing';\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      expect(service.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      const appController = app.get<AppController>(AppController);\n      expect(appController.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "),\r\n      ],\r\n      ({ headers, value }) => {\r\n        const name = headers['x-event-name'];\r\n        const vOrderId = value?.orderId ?? value?.orderID;\r\n        if (name && vOrderId && vOrderId === orderId) seen.add(name);\r\n      },\r\n      async () => {\r\n        await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 155,
        "end": 163,
        "startLoc": {
          "line": 155,
          "column": 19,
          "position": 2445
        },
        "endLoc": {
          "line": 163,
          "column": 6,
          "position": 2552
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 108,
        "end": 116,
        "startLoc": {
          "line": 108,
          "column": 17,
          "position": 1745
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 1852
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\r\n        orderId = await pollUntil(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return Boolean(d?.items?.[0]?.orderId);\r\n        }).then(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return d.items[0].orderId;\r\n        });\r\n        await",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 167,
        "end": 175,
        "startLoc": {
          "line": 167,
          "column": 2,
          "position": 2618
        },
        "endLoc": {
          "line": 175,
          "column": 6,
          "position": 2737
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 126,
        "end": 135,
        "startLoc": {
          "line": 126,
          "column": 4,
          "position": 2019
        },
        "endLoc": {
          "line": 135,
          "column": 4,
          "position": 2140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\r\n        String(KafkaTopics.AllStagesCompleted),\r\n      ],\r\n      ({ headers, value }) => {\r\n        const name = headers['x-event-name'];\r\n        const vOrderId = value?.orderId ?? value?.orderID;\r\n        if (name && vOrderId && vOrderId === orderId) seen.add(name);\r\n      },\r\n      async () => {\r\n        await axios.post(`${CMD}/api/order`, {\r\n          commissionerId,\r\n          selectedWorkshops: invited",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 217,
        "end": 228,
        "startLoc": {
          "line": 217,
          "column": 23,
          "position": 3449
        },
        "endLoc": {
          "line": 228,
          "column": 8,
          "position": 3591
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 154,
        "end": 165,
        "startLoc": {
          "line": 154,
          "column": 17,
          "position": 2435
        },
        "endLoc": {
          "line": 165,
          "column": 10,
          "position": 2577
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "},\r\n        });\r\n        orderId = await pollUntil(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return Boolean(d?.items?.[0]?.orderId);\r\n        }).then(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return d.items[0].orderId;\r\n        });\r\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 229,
        "end": 238,
        "startLoc": {
          "line": 229,
          "column": 2,
          "position": 3626
        },
        "endLoc": {
          "line": 238,
          "column": 6,
          "position": 3751
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 166,
        "end": 135,
        "startLoc": {
          "line": 166,
          "column": 2,
          "position": 2612
        },
        "endLoc": {
          "line": 135,
          "column": 4,
          "position": 2140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "],\r\n      ({ headers, value }) => {\r\n        const name = headers['x-event-name'];\r\n        const vOrderId = value?.orderId ?? value?.orderID;\r\n        if (name && vOrderId && vOrderId === orderId) seen.add(name);\r\n      },\r\n      async () => {\r\n        await axios.post(`${CMD}/api/order`, {\r\n          commissionerId,\r\n          selectedWorkshops: workshops,\r\n          request: { title: 'bad'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 260,
        "end": 270,
        "startLoc": {
          "line": 260,
          "column": 2,
          "position": 4094
        },
        "endLoc": {
          "line": 270,
          "column": 6,
          "position": 4234
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 109,
        "end": 166,
        "startLoc": {
          "line": 109,
          "column": 7,
          "position": 1750
        },
        "endLoc": {
          "line": 166,
          "column": 6,
          "position": 2590
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", deadline: isoNow(), budget: '1' },\r\n        });\r\n        orderId = await pollUntil(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return Boolean(d?.items?.[0]?.orderId);\r\n        }).then(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return d.items[0].orderId;\r\n        });\r\n        const before = await readStages(READ, commissionerId);\r\n        let status = 0;\r\n        try {\r\n          await axios.post(`${CMD}/api/stage-completion/mark`",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 270,
        "end": 282,
        "startLoc": {
          "line": 270,
          "column": 21,
          "position": 4241
        },
        "endLoc": {
          "line": 282,
          "column": 28,
          "position": 4427
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 229,
        "end": 241,
        "startLoc": {
          "line": 229,
          "column": 22,
          "position": 3611
        },
        "endLoc": {
          "line": 241,
          "column": 34,
          "position": 3797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\r\n        expect(seen.size).toBe(0);\r\n        const after = await readStages(READ, commissionerId);\r\n        expect(after.total).toBeGreaterThanOrEqual(before.total ?? 0);\r\n      },\r\n    );\r\n  }, 90_000);\r\n\r\n  it('non-happy: confirm stage before mark or when not required → 4xx; no completion; read model not completed'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 289,
        "end": 297,
        "startLoc": {
          "line": 289,
          "column": 4,
          "position": 4520
        },
        "endLoc": {
          "line": 297,
          "column": 107,
          "position": 4605
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 246,
        "end": 254,
        "startLoc": {
          "line": 246,
          "column": 4,
          "position": 3873
        },
        "endLoc": {
          "line": 254,
          "column": 91,
          "position": 3958
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "${randomUUID().slice(0, 8)}`;\r\n    const workshops = [`w-${randomUUID().slice(0, 4)}`, `w-${randomUUID().slice(0, 4)}`];\r\n    const seen = new Set<string>();\r\n    let orderId!: string;\r\n    await withConsumer(\r\n      [ String(KafkaTopics.AllStagesCompleted",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 298,
        "end": 303,
        "startLoc": {
          "line": 298,
          "column": 19,
          "position": 4626
        },
        "endLoc": {
          "line": 303,
          "column": 19,
          "position": 4730
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 255,
        "end": 260,
        "startLoc": {
          "line": 255,
          "column": 16,
          "position": 3979
        },
        "endLoc": {
          "line": 260,
          "column": 17,
          "position": 4083
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ") ],\r\n      ({ headers, value }) => {\r\n        const name = headers['x-event-name'];\r\n        const vOrderId = value?.orderId ?? value?.orderID;\r\n        if (name && vOrderId && vOrderId === orderId) seen.add(name);\r\n      },\r\n      async () => {\r\n        await axios.post(`${CMD}/api/order`, {\r\n          commissionerId,\r\n          selectedWorkshops: workshops,\r\n          request: { title: 'bad', description: 'confirm-before-mark'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 303,
        "end": 313,
        "startLoc": {
          "line": 303,
          "column": 17,
          "position": 4739
        },
        "endLoc": {
          "line": 313,
          "column": 22,
          "position": 4887
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 260,
        "end": 270,
        "startLoc": {
          "line": 260,
          "column": 19,
          "position": 4092
        },
        "endLoc": {
          "line": 270,
          "column": 21,
          "position": 4240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", deadline: isoNow(), budget: '1' },\r\n        });\r\n        orderId = await pollUntil(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return Boolean(d?.items?.[0]?.orderId);\r\n        }).then(async () => {\r\n          const d = await readStages(READ, commissionerId);\r\n          return d.items[0].orderId;\r\n        });\r\n        await axios.post(`${CMD}/api/workshop-invitation/accept`, {\r\n          orderId,\r\n          workshopId: workshops[0],\r\n          request: {\r\n            stages: [\r\n              { orderId, workshopId: workshops[0], stageName: 'Design', stageOrder: 0, approximateLength: '1d', description: 'd', needsConfirmation: false },\r\n              { orderId, workshopId: workshops[0], stageName: 'Build',  stageOrder: 1, approximateLength: '1d', description: 'b', needsConfirmation: true  },\r\n            ]",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 313,
        "end": 329,
        "startLoc": {
          "line": 313,
          "column": 22,
          "position": 4888
        },
        "endLoc": {
          "line": 329,
          "column": 2,
          "position": 5171
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 229,
        "end": 182,
        "startLoc": {
          "line": 229,
          "column": 22,
          "position": 3611
        },
        "endLoc": {
          "line": 182,
          "column": 2,
          "position": 2880
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "/* eslint-disable */\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n  axios.defaults.baseURL = `http://${host}:${port}`;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { killPort } from '@nx/node/utils';\r\n/* eslint-disable */\r\n\r\nmodule.exports = async function () {\r\n  // Put clean up logic here (e.g. stopping services, docker-compose, etc.).\r\n  // Hint: `globalThis` is shared between setup and teardown.\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await killPort(port);\r\n  console.log(globalThis.__TEARDOWN_MESSAGE__);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { waitForPortOpen } from '@nx/node/utils';\r\n\r\n/* eslint-disable */\r\nvar __TEARDOWN_MESSAGE__: string;\r\n\r\nmodule.exports = async function () {\r\n  // Start services that that the app needs to run (e.g. database, docker-compose, etc.).\r\n  console.log('\\nSetting up...\\n');\r\n\r\n  const host = process.env.HOST ?? 'localhost';\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await waitForPortOpen(port, { host });\r\n\r\n  // Hint: Use `globalThis` to pass variables to global teardown.\r\n  globalThis.__TEARDOWN_MESSAGE__ = '\\nTearing down...\\n';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import axios from 'axios';\n\ndescribe('GET /api', () => {\n  it('should return a message', async () => {\n    const res = await axios.get(`/api`);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service-e2e\\src\\commissioner-service\\commissioner-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\workshop-service\\workshop-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import { Test } from '@nestjs/testing';\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      expect(service.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      const appController = app.get<AppController>(AppController);\n      expect(appController.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "/* eslint-disable */\r\nmodule.exports = async function () {\r\n  const stack = (globalThis as any).__E2E_STACK__;\r\n  console.log('\\n[E2E] Tearing down...\\n');\r\n\r\n  try { stack?.app?.kill('SIGTERM'); } catch {}\r\n  try { await stack?.pg?.stop(); } catch {}\r\n  try { await stack?.kafka?.stop(); } catch {}\r\n\r\n  console.log('[E2E] Done.');\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 11,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 11,
          "column": 2,
          "position": 140
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 11,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 11,
          "column": 2,
          "position": 140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": "/* eslint-disable */\r\nimport { waitForPortOpen } from '@nx/node/utils';\r\nimport { PostgreSqlContainer, StartedPostgreSqlContainer } from '@testcontainers/postgresql';\r\nimport { KafkaContainer, StartedKafkaContainer } from '@testcontainers/kafka';\r\nimport { spawn, ChildProcessWithoutNullStreams } from 'child_process';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\ntype Stack = {\r\n  pg: StartedPostgreSqlContainer;\r\n  kafka: StartedKafkaContainer;\r\n  app: ChildProcessWithoutNullStreams;\r\n};\r\n\r\ndeclare global {\r\n  // eslint-disable-next-line no-var\r\n  var __E2E_STACK__: Stack;\r\n}\r\n\r\nmodule.exports = async function () {\r\n  console.log('\\n[E2E] Setting up Postgres, Kafka, and app (Option B)...\\n');\r\n\r\n  // 1) Infra containers\r\n  const pg = await new PostgreSqlContainer('postgres:16-alpine').start();\r\n\r\n  // Confluent image required by KafkaContainer typings in your version\r\n  const KAFKA_IMAGE = process.env.KAFKA_IMAGE ?? 'confluentinc/cp-kafka:7.5.3';\r\n  const kafka = await new KafkaContainer(KAFKA_IMAGE)\r\n    .withStartupTimeout(120_000)\r\n    .start();\r\n\r\n  // Prefer getBootstrapServers if available, else use mapped 9093\r\n  const anyKafka = kafka as any;\r\n  const bootstrap: string =\r\n    typeof anyKafka.getBootstrapServers === 'function'\r\n      ? anyKafka.getBootstrapServers()\r\n      : `${kafka.getHost()}:${kafka.getMappedPort(9093)}`;\r\n\r\n  // 2) App ports\r\n  const PROC_PORT = Number(process.env.BONUS_PROC_HTTP_PORT ?? 3001);\r\n  const READ_PORT = Number(process.env.BONUS_READ_HTTP_PORT ?? 3002);\r\n\r\n  // 3) Environment for the spawned app and for tests\r\n  const env = {\r\n    ...process.env,\r\n    // DB\r\n    PG_HOST: pg.getHost(),\r\n    PG_PORT: String(pg.getMappedPort(5432)),\r\n    PG_USER: pg.getUsername(),\r\n    PG_PASSWORD: pg.getPassword(),\r\n    PG_DB: pg.getDatabase(),\r\n    DB_SCHEMA: 'public',\r\n    // Kafka\r\n    KAFKA_BOOTSTRAP: bootstrap,\r\n    KAFKA_BROKER_HOSTNAME: bootstrap.split(':')[0],\r\n    KAFKA_BROKER_PORT: bootstrap.split(':')[1],\r\n    // HTTP\r\n    BONUS_PROC_HTTP_PORT",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 58,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 58,
          "column": 21,
          "position": 556
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 58,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 58,
          "column": 24,
          "position": 556
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\r\n    );\r\n  }\r\n\r\n  const app = spawn('node', [entry], {\r\n    env,\r\n    stdio: 'inherit',\r\n    shell: true, // Windows-friendly\r\n  });\r\n\r\n  // 5) Wait for HTTP surfaces\r\n  await waitForPortOpen(PROC_PORT, { host: '127.0.0.1' });\r\n  await waitForPortOpen(READ_PORT, { host: '127.0.0.1' });\r\n\r\n  // 6) Keep only live handles for teardown\r\n  (globalThis as any).__E2E_STACK__ = { pg, kafka, app };\r\n\r\n  process.env.KAFKA_BOOTSTRAP = env.KAFKA_BOOTSTRAP;\r\n  process.env.READ_BASE_URL = env.READ_BASE_URL;\r\n\r\n  console.log(`[E2E] Kafka bootstrap: ${env.KAFKA_BOOTSTRAP}`);\r\n  console.log(`[E2E] Read base URL: ${env.READ_BASE_URL}\\n`);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service-e2e\\src\\support\\global-setup.ts",
        "start": 68,
        "end": 90,
        "startLoc": {
          "line": 68,
          "column": 48,
          "position": 671
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 880
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\support\\global-setup.ts",
        "start": 68,
        "end": 90,
        "startLoc": {
          "line": 68,
          "column": 48,
          "position": 671
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 880
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "} = {},\r\n): Promise<void> {\r\n  const start = Date.now();\r\n  let failures = 0;\r\n  while (Date.now() - start < timeoutMs) {\r\n    try {\r\n      if (await predicate()) return;\r\n    } catch (e: any) {\r\n      failures++;\r\n      // show one error periodically so you see what’s wrong instead of staring at nothing",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service-e2e\\src\\bonus-service\\bonus-processor.spec.ts",
        "start": 15,
        "end": 24,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 178
        },
        "endLoc": {
          "line": 24,
          "column": 85,
          "position": 289
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 11,
        "end": 20,
        "startLoc": {
          "line": 11,
          "column": 2,
          "position": 167
        },
        "endLoc": {
          "line": 20,
          "column": 3,
          "position": 278
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "=== 0) {\r\n        const msg = e?.response\r\n          ? `HTTP ${e.response.status} ${e.response.statusText} body=${JSON.stringify(e.response.data)}`\r\n          : e?.code\r\n            ? `${e.code}: ${e.message}`\r\n            : e?.message || String(e);\r\n        // eslint-disable-next-line no-console",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service-e2e\\src\\bonus-service\\bonus-processor.spec.ts",
        "start": 25,
        "end": 31,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 310
        },
        "endLoc": {
          "line": 31,
          "column": 39,
          "position": 411
        }
      },
      "secondFile": {
        "name": "apps\\order-service-e2e\\src\\order-service\\order-workflow.spec.ts",
        "start": 20,
        "end": 26,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 295
        },
        "endLoc": {
          "line": 26,
          "column": 8,
          "position": 396
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "/* eslint-disable */\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n  axios.defaults.baseURL = `http://${host}:${port}`;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { killPort } from '@nx/node/utils';\r\n/* eslint-disable */\r\n\r\nmodule.exports = async function () {\r\n  // Put clean up logic here (e.g. stopping services, docker-compose, etc.).\r\n  // Hint: `globalThis` is shared between setup and teardown.\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await killPort(port);\r\n  console.log(globalThis.__TEARDOWN_MESSAGE__);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { waitForPortOpen } from '@nx/node/utils';\r\n\r\n/* eslint-disable */\r\nvar __TEARDOWN_MESSAGE__: string;\r\n\r\nmodule.exports = async function () {\r\n  // Start services that that the app needs to run (e.g. database, docker-compose, etc.).\r\n  console.log('\\nSetting up...\\n');\r\n\r\n  const host = process.env.HOST ?? 'localhost';\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await waitForPortOpen(port, { host });\r\n\r\n  // Hint: Use `globalThis` to pass variables to global teardown.\r\n  globalThis.__TEARDOWN_MESSAGE__ = '\\nTearing down...\\n';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import axios from 'axios';\n\ndescribe('GET /api', () => {\n  it('should return a message', async () => {\n    const res = await axios.get(`/api`);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service-e2e\\src\\admin-service\\admin-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\workshop-service\\workshop-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import { Test } from '@nestjs/testing';\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      expect(service.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      const appController = app.get<AppController>(AppController);\n      expect(appController.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "/* eslint-disable */\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n  axios.defaults.baseURL = `http://${host}:${port}`;\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\test-setup.ts",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 9,
          "column": 2,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { killPort } from '@nx/node/utils';\r\n/* eslint-disable */\r\n\r\nmodule.exports = async function () {\r\n  // Put clean up logic here (e.g. stopping services, docker-compose, etc.).\r\n  // Hint: `globalThis` is shared between setup and teardown.\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await killPort(port);\r\n  console.log(globalThis.__TEARDOWN_MESSAGE__);\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-teardown.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "import { waitForPortOpen } from '@nx/node/utils';\r\n\r\n/* eslint-disable */\r\nvar __TEARDOWN_MESSAGE__: string;\r\n\r\nmodule.exports = async function () {\r\n  // Start services that that the app needs to run (e.g. database, docker-compose, etc.).\r\n  console.log('\\nSetting up...\\n');\r\n\r\n  const host = process.env.HOST ?? 'localhost';\r\n  const port = process.env.PORT ? Number(process.env.PORT) : 3000;\r\n  await waitForPortOpen(port, { host });\r\n\r\n  // Hint: Use `globalThis` to pass variables to global teardown.\r\n  globalThis.__TEARDOWN_MESSAGE__ = '\\nTearing down...\\n';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\support\\global-setup.ts",
        "start": 1,
        "end": 16,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import axios from 'axios';\n\ndescribe('GET /api', () => {\n  it('should return a message', async () => {\n    const res = await axios.get(`/api`);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff-e2e\\src\\admin-bff\\admin-bff.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\src\\workshop-service\\workshop-service.spec.ts",
        "start": 1,
        "end": 10,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import { Test } from '@nestjs/testing';\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      expect(service.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.service.spec.ts",
        "start": 1,
        "end": 20,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 178
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.ts",
        "start": 1,
        "end": 12,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "import { Test, TestingModule } from '@nestjs/testing';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Hello API\"', () => {\n      const appController = app.get<AppController>(AppController);\n      expect(appController.getData()).toEqual({ message: 'Hello API' });\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service\\src\\app\\app.controller.spec.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n  preset: '../../jest.preset',\r\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\r\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\r\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\r\n  testEnvironment: 'node',\r\n  transform: {\r\n    '^.+\\\\.[tj]s$': [\r\n      'ts-jest',\r\n      {\r\n        tsconfig: '<rootDir>/tsconfig.spec.json',\r\n      },\r\n    ],\r\n  },\r\n  moduleFileExtensions: ['ts', 'js', 'html'],\r\n  coverageDirectory: '../../coverage/workshop-mobile-bff-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\workshop-mobile-bff-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 26,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 41,
          "position": 123
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 23,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n  preset: '../../jest.preset',\r\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\r\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\r\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\r\n  testEnvironment: 'node',\r\n  transform: {\r\n    '^.+\\\\.[tj]s$': [\r\n      'ts-jest',\r\n      {\r\n        tsconfig: '<rootDir>/tsconfig.spec.json',\r\n      },\r\n    ],\r\n  },\r\n  moduleFileExtensions: ['ts', 'js', 'html'],\r\n  coverageDirectory: '../../coverage/web-bff-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\web-bff-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 14,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 29,
          "position": 123
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 23,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n  preset: '../../jest.preset',\r\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\r\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\r\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\r\n  testEnvironment: 'node',\r\n  transform: {\r\n    '^.+\\\\.[tj]s$': [\r\n      'ts-jest',\r\n      {\r\n        tsconfig: '<rootDir>/tsconfig.spec.json',\r\n      },\r\n    ],\r\n  },\r\n  moduleFileExtensions: ['ts', 'js', 'html'],\r\n  coverageDirectory: '../../coverage/review-service-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\review-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 21,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 36,
          "position": 123
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 23,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n  preset: '../../jest.preset',\r\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\r\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\r\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\r\n  testEnvironment: 'node',\r\n  transform: {\r\n    '^.+\\\\.[tj]s$': [\r\n      'ts-jest',\r\n      {\r\n        tsconfig: '<rootDir>/tsconfig.spec.json',\r\n      },\r\n    ],\r\n  },\r\n  moduleFileExtensions: ['ts', 'js', 'html'],\r\n  coverageDirectory: '../../coverage/report-service-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\report-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 21,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 36,
          "position": 123
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 23,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n  preset: '../../jest.preset',\r\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\r\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\r\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\r\n  testEnvironment: 'node',\r\n  transform: {\r\n    '^.+\\\\.[tj]s$': [\r\n      'ts-jest',\r\n      {\r\n        tsconfig: '<rootDir>/tsconfig.spec.json',\r\n      },\r\n    ],\r\n  },\r\n  moduleFileExtensions: ['ts', 'js', 'html'],\r\n  coverageDirectory: '../../coverage/order-service-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\order-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 20,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 35,
          "position": 123
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 23,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n  preset: '../../jest.preset',\r\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\r\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\r\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\r\n  testEnvironment: 'node',\r\n  transform: {\r\n    '^.+\\\\.[tj]s$': [\r\n      'ts-jest',\r\n      {\r\n        tsconfig: '<rootDir>/tsconfig.spec.json',\r\n      },\r\n    ],\r\n  },\r\n  moduleFileExtensions: ['ts', 'js', 'html'],\r\n  coverageDirectory: '../../coverage/commissioner-service-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\commissioner-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 27,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 42,
          "position": 123
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 23,
          "position": 12
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\n  testEnvironment: 'node',\n  transform: {\n    '^.+\\\\.[tj]s$': [\n      'ts-jest',\n      {\n        tsconfig: '<rootDir>/tsconfig.spec.json',\n      },\n    ],\n  },\n  moduleFileExtensions: ['ts', 'js', 'html'],\n  coverageDirectory: '../../coverage/bonus-service-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\bonus-service-e2e\\jest.config.ts",
        "start": 3,
        "end": 17,
        "startLoc": {
          "line": 3,
          "column": 23,
          "position": 18
        },
        "endLoc": {
          "line": 17,
          "column": 35,
          "position": 107
        }
      },
      "secondFile": {
        "name": "apps\\workshop-service-e2e\\jest.config.ts",
        "start": 3,
        "end": 17,
        "startLoc": {
          "line": 3,
          "column": 20,
          "position": 20
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n  preset: '../../jest.preset.js',\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\n  testEnvironment: 'node',\n  transform: {\n    '^.+\\\\.[tj]s$': [\n      'ts-jest',\n      {\n        tsconfig: '<rootDir>/tsconfig.spec.json',\n      },\n    ],\n  },\n  moduleFileExtensions: ['ts', 'js', 'html'],\n  coverageDirectory: '../../coverage/admin-service-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 20,
          "position": 11
        },
        "endLoc": {
          "line": 17,
          "column": 35,
          "position": 107
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 20,
          "position": 11
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n  preset: '../../jest.preset.js',\n  globalSetup: '<rootDir>/src/support/global-setup.ts',\n  globalTeardown: '<rootDir>/src/support/global-teardown.ts',\n  setupFiles: ['<rootDir>/src/support/test-setup.ts'],\n  testEnvironment: 'node',\n  transform: {\n    '^.+\\\\.[tj]s$': [\n      'ts-jest',\n      {\n        tsconfig: '<rootDir>/tsconfig.spec.json',\n      },\n    ],\n  },\n  moduleFileExtensions: ['ts', 'js', 'html'],\n  coverageDirectory: '../../coverage/admin-bff-e2e'",
      "tokens": 0,
      "firstFile": {
        "name": "apps\\admin-bff-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 16,
          "position": 11
        },
        "endLoc": {
          "line": 17,
          "column": 31,
          "position": 107
        }
      },
      "secondFile": {
        "name": "apps\\bonus-service-e2e\\jest.config.ts",
        "start": 2,
        "end": 17,
        "startLoc": {
          "line": 2,
          "column": 20,
          "position": 11
        },
        "endLoc": {
          "line": 17,
          "column": 38,
          "position": 123
        }
      }
    }
  ]
}